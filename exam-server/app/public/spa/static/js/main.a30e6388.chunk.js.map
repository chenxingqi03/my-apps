{"version":3,"sources":["store/model sync nonrecursive /.js|/.ts$","store/model/testPaper.js","store/model/user.js","router/RouterView.tsx","view/Home.tsx","view/Detail.tsx","view/Login.tsx","api/apiss.ts","view/home/Testadd.tsx","view/home/Testlist.tsx","view/home/Testlook.tsx","component/userAdd/children/Add.tsx","component/userAdd/children/Up.tsx","component/userAdd/Adduser.tsx","component/userAdd/Identity.tsx","component/userAdd/AuthorityApi.tsx","component/userAdd/AuthorityView.tsx","component/userAdd/SetIdentityApi.tsx","component/userAdd/SetIdentityView.tsx","view/home/Useradd.tsx","view/home/Usershow.tsx","view/home/Examadd.tsx","view/home/Examlist.tsx","view/home/ExamNew.tsx","view/home/ExamDetail.tsx","api/manger.ts","view/home/class/FormPublice.tsx","view/home/class/change.tsx","view/home/Class.tsx","components/laye.tsx","view/home/Classroom.tsx","view/home/Student.tsx","api/waitclass.ts","view/home/Waitclass.tsx","view/home/Waitclassmate.tsx","view/home/StudentExamDetail.tsx","view/home/Echarts.tsx","view/home/usershow/Apioth.tsx","view/home/usershow/Iddata.tsx","view/home/usershow/Idnapi.tsx","view/home/usershow/Idnoth.tsx","view/home/usershow/Userdata.tsx","view/home/usershow/Viewoth.tsx","view/home/usershow/xaingssq.tsx","view/home/usershow/Teslookbian.tsx","router/config.ts","App.tsx","store/index.js","index.js","utils/request.js","api/user.ts","api/exam.ts"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","TestPaper","namespace","makeObservable","this","observable","action","a","_allExamType","result","runInAction","examType","data","_allCourseType","courseType","_allCourseList","console","log","Set","exam","forEach","item","realCourseList","push","key","exam_exam_id","name","title","grade","grade_name","ite","person","user_name","start_time","end_time","UserStore","token","userInfo","sessionStorage","setItem","JSON","stringify","userData","RouterView","props","coms","routes","filter","component","reds","redirect","index","path","render","routeProps","Com","isHoldup","localStorage","getItem","children","to","pathname","state","SubMenu","Menu","Header","Layout","Content","Sider","Testques","inject","store","observer","headText","viewList","userViewList","user","user_id","parse","res","setState","className","src","alt","collapsedWidth","onBreakpoint","broken","onCollapse","collapsed","type","theme","mode","onClick","changHeadText","icon","AppstoreOutlined","style","display","findIndex","view_authority_text","Item","padding","margin","minHeight","Component","Detail","Login","formRef","React","createRef","onFinish","values","username","password","_login","openNotification","msg","userMsg","onReset","history","current","resetFields","ref","initialValues","remember","rules","required","message","prefix","UserOutlined","placeholder","LockOutlined","valuePropName","noStyle","htmlType","notification","open","duration","description","CheckCircleOutlined","color","CloseCircleOutlined","_grade","request","get","_room","_zhou","_cha","questions_type_id","exam_id","subject_id","params","_chaid","questions_id","_tianjia","questions_answer","questions_stem","post","editor","editor1","list","tg","zhouData","tiData","xiuData","xiala1","xiala2","xiala3","E","create","getList","zhouList","leiList","el","target","value","txt","text","alert","onChange","inputChange","exam_name","subject_text","questions_type_text","getInputValue","Testlist","show","gradedata","questions","ying","bian","qd","qx","Testlook","getdata","tabIndex","leiData","fenData","questions_ids","fenList","obj","tab","cha","xian","bianji","Option","Select","Add","Form","useForm","form","useState","optionList","setOptions","useEffect","_identity","_user","err","errors","Password","width","defaultActiveFirstOption","identity_id","identity_text","marginLeft","optionUser","setOptionUser","_userUser","_userUpUser","TabPane","Tabs","Adduser","Up","Identity","_identityEdit","AuthorityApi","_authorityApiEdit","AuthorityView","_viewAuthority","_authorityViewEdit","SetIdentityApi","optionApi","setOptionsApi","_apiAuthority","apiRes","_setIdentityApi","api_authority_id","api_authority_text","SetIdentityView","_setIdentityView","view_authority_id","Useradd","Usershow","titleChange","Examadd","fields","number","assign","Number","toString","_addTest","time","testPaper","paddingLeft","label","paddingTop","Examlist","dataSource","columns","dataIndex","record","length","goDetail","count","onFinishFailed","errorInfo","rowClassName","bordered","slice","getExamType","allCourseType","allCourseList","ExamNew","visible","initNum","subjectType","allTest","flag","filterData","test","allTestList","addDetail","questionId","showModal","_getQuestionType","showDialog","handleChangeTest","handleChangeTitle","handleOk","handleCancel","marginTop","textAlign","location","border","position","right","top","delItem","backgroundColor","createTest","footer","changeIndex","searchTest","showDetail","onOk","onCancel","arr","_updateTest","splice","_search","_getTestList","ExamDetail","_show","_class","_subject","_del_grade","grade_id","url","delete","_updata","room_id","put","_addRoom","room_text","_del_student","student_id","layout","labelCol","span","wrapperCol","tailLayout","offset","FormPublice","subject","room","onGenderChange","setFieldsValue","note","updata","onFill","gender","class","defaultValue","allowClear","shouldUpdate","prevValues","currentValues","getFieldValue","change","b","Class","changeList","addGrade","delGrade","background","overflowY","del","laye","stype","addroom","dedl","Classroom","Table","Column","ColumnGroup","Input","Search","list1","c","Student","AudioOutlined","StartEnd","end","newList","dsad","go","red","student","student_name","includes","setTimeout","handleChange","handleChangec","size","onRow","event","innerHTML","_getStudentExamDetail","exam_student_id","Waitclass","toClassMate","rowKey","getGrade","Waitclassmate","gradeList","toStudentExamDetail","getExamList","status","StudentExamDetail","inputValue","showModel","Ok","score","Cancel","detailData","fontSize","source","plain","student_answer","min","max","getStudentExamDetail","Echarts","edata","tooltip","xAxis","yAxis","series","e18","echarts","init","setOption","Apioth","userIndentityData","getUserIndentity","apioauth","Iddata","userIdentity","Idnapi","idnapi","Idnoth","idnoth","Userdata","getUserData","Viewoth","viewoth","xaingssq","listdata","router","Home","Testadd","App","context","require","getModel","Store","model","default","ReactDOM","document","getElementById","axios","timeout","interceptors","use","config","headers","authorization","response","window","href","Promise","reject","user_pwd","query","ids","question_ids"],"mappings":"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","file":"static/js/main.a30e6388.chunk.js","sourcesContent":["var map = {\n\t\"./testPaper.js\": 1005,\n\t\"./user.js\": 1006\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 1004;","import { observable, action, makeObservable, runInAction } from \"mobx\";\nimport { _allExamType,_allCourseType,_allCourseList} from \"@/api/exam\";\nclass TestPaper {\n  constructor() {\n    makeObservable(this);\n  }\n  namespace = \"testPaper\";\n  @observable examType = [];\n  @observable courseType = [];\n  @observable courseList=[];\n  @observable realCourseList=[];\n  @observable getQuestionList=[];\n  //试卷类型\n  @action getExamType = async () => {\n    const result = await _allExamType();\n    runInAction(() => {\n      this.examType = result.data.data;\n    });\n  };\n  // 课程类型\n  @action allCourseType = async () => {\n    const result = await _allCourseType();\n    runInAction(() => {\n      this.courseType = result.data.data;\n    });\n  };\n  // 课程列表\n  @action allCourseList = async () => {\n    const result = await _allCourseList();\n     console.log(result.data);\n    runInAction(() => {\n      let realList=[...new Set(result.data.exam)]\n      // this.realCourseList=[];\n      realList.forEach((item) => {\n        this.realCourseList.push({\n          key: item.exam_exam_id,\n          name: item.title,\n          grade: item.grade_name.map((ite) => {\n            return ite + \" \";\n          }),\n          person: item.user_name,\n          start_time: item.start_time,\n          end_time: item.end_time,\n        });\n      });\n    });\n  };\n}\n\nexport default new TestPaper();\n","import { observable, action, makeObservable, runInAction } from \"mobx\";\nimport { userData } from \"@/api/user\";\n\nclass UserStore {\n  constructor() {\n    makeObservable(this);\n  }\n\n  @observable namespace = \"user\";\n  @observable token = \"\";\n  @observable userInfo = {};\n  @observable userData = [];\n\n  @action userMsg = ({ token, userInfo }) => {\n    this.token = token;\n    this.userInfo = userInfo;\n    sessionStorage.setItem(\"userInfo\", JSON.stringify(userInfo));\n    sessionStorage.setItem(\"token\", token);\n  };\n\n  @action getUserData = async () => {\n    const result = await userData();\n    console.log(result);\n    runInAction(() => {\n      this.userData = result.data.data;\n    });\n  };\n}\n\nexport default new UserStore();\n","import React, { ComponentType } from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom'\ninterface ICom {\n    path: string,\n    redirect?: string,\n    component?: ComponentType,\n    children?: ICom,\n    isHoldup?: boolean\n}\ninterface IProps {\n    routes: Array<ICom>\n}\nfunction RouterView(props: IProps) {\n    let coms = props.routes.filter(item => item.component);\n    let reds = props.routes.filter(item => item.redirect);\n    return <Switch>\n        {\n            coms.map((item, index) => {\n                return <Route path={item.path} key={index} render={(routeProps) => {\n                    let Com: ComponentType | any = item.component\n                    if (item.isHoldup) {\n                        return localStorage.getItem('token')\n                            ?\n                            item.children\n                                ?\n                                <Com  {...routeProps} routes={item.children} />\n                                :\n                                <Com {...routeProps} />\n                            :\n                            <Redirect to={\n                                {\n                                    pathname: '/login',\n                                    state: {\n                                        path: item.path\n                                    }\n                                }\n                            } />\n                    } else {\n                        if (item.children) {\n                            return <Com  {...routeProps} routes={item.children} />\n                        } else {\n                            return <Com {...routeProps} />\n                        }\n                    }\n                }} />\n            })\n        }\n        {\n            reds.map((item, index) => {\n                return <Redirect to={item.redirect as string} key={index} />\n            })\n        }\n    </Switch>\n}\nexport default RouterView;","import React, { Component, ComponentType } from \"react\";\nimport { Layout, Menu } from \"antd\";\nimport RouterView from \"@/router/RouterView\";\nimport { Link } from \"react-router-dom\";\nimport { AppstoreOutlined } from \"@ant-design/icons\";\nimport { observer, inject } from \"mobx-react\";\nimport { userViewList } from \"@/api/user\";\n\nconst { SubMenu } = Menu;\nconst { Header, Content, Sider } = Layout;\ninterface ICom {\n  path: string;\n  redirect?: string;\n  component?: ComponentType;\n  children?: ICom;\n  isHoldup?: boolean;\n}\ninterface Iprops {\n  routes: Array<ICom>;\n}\ninterface Istate {\n  headText: string;\n  viewList: Array<any>;\n}\n\n@inject((store) => store)\n@observer\nexport default class Testques extends Component<Iprops, Istate> {\n  constructor(props: Iprops) {\n    super(props);\n    this.state = {\n      headText: \"添加试题\",\n      viewList: [],\n    };\n  }\n\n  async componentDidMount() {\n    let res = await userViewList((this.props as any).user.userInfo.user_id ? (this.props as any).user.userInfo.user_id : JSON.parse(sessionStorage.getItem(\"userInfo\") as string).user_id);\n    this.setState({\n      viewList: res.data.data,\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"home\">\n        <header className=\"header\">\n          <img src=\"http://www.utc.edu/center-women-gender-equity/images/spectrumlogoupdated.jpg\" alt=\"\" />\n          <dl>\n            <dt></dt>\n            <dd>{(this.props as any).user.userInfo.user_name ? (this.props as any).user.userInfo.user_name : JSON.parse(sessionStorage.getItem(\"userInfo\") as string).user_name}</dd>\n          </dl>\n        </header>\n        <Layout>\n          <Sider\n            collapsedWidth=\"0\"\n            onBreakpoint={(broken) => {\n              console.log(broken);\n            }}\n            onCollapse={(collapsed, type) => {\n              console.log(collapsed, type);\n            }}\n          >\n            <div className=\"logo\" />\n            <Menu theme=\"dark\" mode=\"inline\" onClick={({ item }) => this.changHeadText({ item })}>\n              <SubMenu\n                key=\"sub1\"\n                icon={<AppstoreOutlined />}\n                title=\"试卷管理\"\n                style={{\n                  display:\n                    this.state.viewList.findIndex((item) => item.view_authority_text === \"查看试题\") || this.state.viewList.findIndex((item) => item.view_authority_text === \"添加试题\") !== -1 || this.state.viewList.findIndex((item) => item.view_authority_text === \"试题分类\") !== -1\n                      ? \"block\"\n                      : \"none\",\n                }}\n              >\n                <Menu.Item key=\"1\" style={{ display: this.state.viewList.findIndex((item) => item.view_authority_text === \"添加试题\") !== -1 ? \"block\" : \"none\" }}>\n                  <Link to=\"/home/testadd\">添加试题</Link>\n                </Menu.Item>\n                <Menu.Item key=\"2\" style={{ display: this.state.viewList.findIndex((item) => item.view_authority_text === \"试题分类\") !== -1 ? \"block\" : \"none\" }}>\n                  <Link to=\"/home/testlist\">试题分类</Link>\n                </Menu.Item>\n                <Menu.Item key=\"3\" style={{ display: this.state.viewList.findIndex((item) => item.view_authority_text === \"查看试题\") !== -1 ? \"block\" : \"none\" }}>\n                  <Link to=\"/home/testlook\">查看试题</Link>\n                </Menu.Item>\n              </SubMenu>\n              <SubMenu key=\"sub2\" icon={<AppstoreOutlined />} title=\"用户管理\" style={{ display: this.state.viewList.findIndex((item) => item.view_authority_text === \"添加用户\") !== -1 || this.state.viewList.findIndex((item) => item.view_authority_text === \"用户展示\") !== -1 ? \"block\" : \"none\" }}>\n                <Menu.Item key=\"4\" style={{ display: this.state.viewList.findIndex((item) => item.view_authority_text === \"添加用户\") !== -1 ? \"block\" : \"none\" }}>\n                  <Link to=\"/home/useradd\">添加用户</Link>\n                </Menu.Item>\n                <Menu.Item key=\"5\" style={{ display: this.state.viewList.findIndex((item) => item.view_authority_text === \"用户展示\") !== -1 ? \"block\" : \"none\" }}>\n                  <Link to=\"/home/usershow\">用户展示</Link>\n                </Menu.Item>\n              </SubMenu>\n              <SubMenu key=\"sub3\" icon={<AppstoreOutlined />} title=\"考试管理\" style={{ display: this.state.viewList.findIndex((item) => item.view_authority_text === \"试卷列表\") !== -1 || this.state.viewList.findIndex((item) => item.view_authority_text === \"添加考试\") !== -1 ? \"block\" : \"none\" }}>\n                <Menu.Item key=\"6\" style={{ display: this.state.viewList.findIndex((item) => item.view_authority_text === \"添加考试\") !== -1 ? \"block\" : \"none\" }}>\n                  <Link to=\"/home/examadd\">添加考试</Link>\n                </Menu.Item>\n                <Menu.Item key=\"7\" style={{ display: this.state.viewList.findIndex((item) => item.view_authority_text === \"试卷列表\") !== -1 ? \"block\" : \"none\" }}>\n                  <Link to=\"/home/examlist\">试卷列表</Link>\n                </Menu.Item>\n              </SubMenu>\n              <SubMenu\n                key=\"sub4\"\n                icon={<AppstoreOutlined />}\n                title=\"班级管理\"\n                style={{\n                  display:\n                    this.state.viewList.findIndex((item) => item.view_authority_text === \"学生管理\") !== -1 || this.state.viewList.findIndex((item) => item.view_authority_text === \"教室管理\") !== -1 || this.state.viewList.findIndex((item) => item.view_authority_text === \"班级管理\") !== -1\n                      ? \"block\"\n                      : \"none\",\n                }}\n              >\n                <Menu.Item key=\"8\" style={{ display: this.state.viewList.findIndex((item) => item.view_authority_text === \"班级管理\") !== -1 ? \"block\" : \"none\" }}>\n                  <Link to=\"/home/class\">班级管理</Link>\n                </Menu.Item>\n                <Menu.Item key=\"9\" style={{ display: this.state.viewList.findIndex((item) => item.view_authority_text === \"教室管理\") !== -1 ? \"block\" : \"none\" }}>\n                  <Link to=\"/home/classroom\">教室管理</Link>\n                </Menu.Item>\n                <Menu.Item key=\"10\" style={{ display: this.state.viewList.findIndex((item) => item.view_authority_text === \"学生管理\") !== -1 ? \"block\" : \"none\" }}>\n                  <Link to=\"/home/student\">学生管理</Link>\n                </Menu.Item>\n              </SubMenu>\n              <SubMenu \n                  key=\"sub5\" \n                  icon={<AppstoreOutlined />} \n                  title=\"阅卷管理\" \n                  style={{ display: \n                  this.state.viewList.findIndex((item) => item.view_authority_text === \"批卷班级\") !== -1 ? \"block\" : \"none\" }}>\n                <Menu.Item key=\"11\" style={{ display: this.state.viewList.findIndex((item) => item.view_authority_text === \"批卷班级\") !== -1 ? \"block\" : \"none\" }}>\n                  <Link to=\"/home/waitclass\">待批班级</Link>\n                </Menu.Item>\n              </SubMenu>\n              <SubMenu key=\"sub6\" icon={<AppstoreOutlined />} title=\"图表管理\">\n                <Menu.Item key=\"12\">\n                  <Link to=\"/home/echarts\">1801B</Link>\n                </Menu.Item>\n              </SubMenu>\n            </Menu>\n          </Sider>\n          <Layout>\n            <Header className=\"site-layout-sub-header-background\" style={{ padding: 0 }}>\n              {this.state.headText}\n            </Header>\n            <Content style={{ margin: \"24px 16px 0\" }}>\n              <div className=\"site-layout-background\" style={{ padding: 24, minHeight: 360 }}>\n                <RouterView routes={this.props.routes} />\n              </div>\n            </Content>\n          </Layout>\n        </Layout>\n      </div>\n    );\n  }\n  changHeadText({ item }: any) {\n    this.setState({\n      headText: item.props.children[1].props.children,\n    });\n  }\n}\n","import React, { Component } from 'react'\n\nexport default class Detail extends Component {\n    render() {\n        return (\n            <div>\n                this is detail page\n            </div>\n        )\n    }\n}\n","import React, { Component } from \"react\";\nimport { RouteComponentProps } from \"react-router-dom\";\nimport { Form, Input, Button, Checkbox, notification } from \"antd\";\nimport { UserOutlined, LockOutlined } from \"@ant-design/icons\";\nimport { AntdForm } from \"@/interface\";\nimport { _login } from \"@/api/user.ts\";\nimport { CheckCircleOutlined, CloseCircleOutlined } from \"@ant-design/icons\";\nimport { inject, observer } from \"mobx-react\";\nimport { FormInstance } from \"antd/lib/form\";\n\ninterface Props extends RouteComponentProps {\n  user: any;\n}\n\n@observer\n@inject(\"user\")\nclass Login extends Component<Props, any> {\n  formRef = React.createRef<FormInstance>();\n\n  render() {\n    return (\n      <div className=\"login\">\n        <div className=\"login-main\">\n          <Form name=\"normal_login\" ref={this.formRef} className=\"login-form\" initialValues={{ remember: true }} onFinish={this.onFinish}>\n            <Form.Item name=\"username\" rules={[{ required: true, message: \"Please input your Username!\" }]}>\n              <Input prefix={<UserOutlined className=\"site-form-item-icon\" />} placeholder=\"请输入用户名\" />\n            </Form.Item>\n            <Form.Item name=\"password\" rules={[{ required: true, message: \"Please input your Password!\" }]}>\n              <Input prefix={<LockOutlined className=\"site-form-item-icon\" />} type=\"password\" placeholder=\"请输入密码\" />\n            </Form.Item>\n            <Form.Item>\n              <Form.Item name=\"remember\" valuePropName=\"checked\" noStyle>\n                <Checkbox>记住密码</Checkbox>\n              </Form.Item>\n            </Form.Item>\n\n            <Form.Item>\n              <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\n                登录\n              </Button>\n            </Form.Item>\n          </Form>\n        </div>\n      </div>\n    );\n  }\n\n  // 提交表单\n  onFinish = async (values: AntdForm) => {\n    const { username, password } = values;\n\n    let res = await _login({ username, password });\n    // console.log(res.data);\n    // 弹出提示框\n    this.openNotification({ code: res.data.code, msg: res.data.msg });\n    // token存入mobx中\n    this.props.user.userMsg({ token: res.data.token, userInfo: res.data.userInfo });\n    // 重置表单\n    this.onReset();\n    // 判断是否登录成功\n    if (res.data.code === 1) {\n      // 跳转页面\n      this.props.history.push(\"/home\");\n    }\n  };\n\n  // 表单重置\n  onReset = () => {\n    (this.formRef as any).current.resetFields();\n  };\n\n  /**\n   * 弹出的提示框\n   * @param code 状态码\n   * @param msg 提示信息\n   */\n  openNotification({ code, msg }: { code: number; msg: string }) {\n    notification.open({\n      message: msg,\n      duration: 3,\n      description: \"\",\n      icon: code === 1 ? <CheckCircleOutlined style={{ color: \"#1890ff\" }} /> : <CloseCircleOutlined style={{ color: \"#ff4d4f\" }} />,\n    });\n  }\n}\n\nexport default Login;\n","/*\n * @Descripttion : \n * @Autor        : 高泽康\n * @Date         : 2020-10-20 20:08:19\n * @LastEditTime : 2020-10-22 16:53:19\n * @FilePath     : \\src\\api\\apiss.ts\n */\nimport request from '../utils/request'\n\nexport function _grade(){\n    const url = '/api/exam/getQuestionsType';\n\n    return request.get(url);\n}\nexport function _room(){\n    const url = '/api/exam/subject';\n\n    return request.get(url);\n}\n\nexport function _zhou(){\n    const url = '/api/exam/examType';\n    return request.get(url);\n}\n\nexport function _sou(){\n    const url = '/api/exam/questions/new';\n    return request.get(url);\n}\nexport function _leixing(id:string){\n    const url =\"/api/exam/delQuestionsType\"\n    return request.post(url,{id})\n}\n\nexport function _cha(questions_type_id:string,exam_id:string,subject_id:string){\n    const url =\"/api/exam/questions/condition\"\n    return request.get(url,{params:{questions_type_id,exam_id,subject_id}})\n    \n}\nexport function _chaid(questions_id:string){\n    const url =\"/api/exam/questions/condition\"\n    return request.get(url,{params:{questions_id}})\n    \n}\n\nexport function _tianjia(exam_id:string,questions_answer:string\n    ,questions_stem:string,questions_type_id:string,subject_id:string,type:string,\n    title:string){\n    const url =\"/api/exam/questions\";\n    const user_id=JSON.parse(sessionStorage.getItem('userInfo') as string).user_id;\n    return request.post(url,{exam_id,\n        type,\n        questions_answer,\n        questions_stem,\n        questions_type_id,\n        subject_id,\n        title,\n        user_id})\n}\n\n\nexport function _xiugai(params:any){\n    const url =\"/api/exam/questions/update\";\n    return request.put(url,params)\n}\n","/*\n * @Descripttion :\n * @Autor        : 高泽康\n * @Date         : 2020-10-20 10:37:13\n * @LastEditTime : 2020-10-22 18:15:33\n * @FilePath     : \\src\\view\\home\\Testadd.tsx\n */\n\nimport React, { Component } from \"react\";\nimport { _room, _grade, _zhou, _tianjia } from \"../../api/apiss\";\n//映入wangeditor 插件\nimport E from \"wangeditor\";\ninterface zhouDatas {\n  questions_type_id: string;\n  questions_type_text: string;\n  questions_type_sort: number;\n}\ninterface tiDataS {\n  exam_id: string;\n  exam_name: string;\n}\ninterface xiuDataS {\n  subject_text: string;\n  subject_id: string;\n  index: number;\n}\ninterface State {\n  list: Array<any>;\n  tg: string;\n  zhouData: Array<zhouDatas>;\n  tiData: Array<tiDataS>;\n  xiuData: Array<xiuDataS>;\n}\n\nlet editor: E | null = null;\n//声明他一下\nlet editor1: E | null = null;\nexport default class Testques extends Component<any, State> {\n  // constructor(props: any) {\n  //     super(props)\n  // }\n  state = {\n    list: [],\n    tg: \"\",\n    zhouData: [],\n    tiData: [],\n    xiuData: [],\n  }\n  xiala1 = \"\"\n  xiala2 = \"\"\n  xiala3 = \"\"\n  componentDidMount() {\n    //在挂载前找到他\n    editor = new E(\"#box1\")\n    //然后实列他\n    editor1 = new E(\"#box2\")\n    //创作一个对象\n    editor.create()\n    editor1.create()\n    this.getList()\n    this.zhouList()\n    this.leiList()\n  }\n  async getList() {\n    let res = await _zhou()\n    //周考\n    console.log(res.data.data)\n    this.setState({\n      zhouData: res.data.data\n    })\n  }\n  async zhouList() {\n    let res = await _grade();\n    //题型\n    console.log(res.data.data)\n    this.setState({\n      tiData: res.data.data\n    })\n  }\n  async leiList() {\n    let res = await _room();\n    //课程\n    console.log(res.data.data)\n    this.setState({\n      xiuData: res.data.data\n    })\n  }\n  inputChange(e: InputEvent) {\n    let el = (e.target as any).value;\n    this.setState({\n      tg: el\n    })\n  }\n  async getInputValue() {\n    let title = this.state.tg\n    let exam_id = (this.xiala1 as any).value;\n    let subject_id = (this.xiala2 as any).value;\n    let questions_type_id = (this.xiala3 as any).value;\n    //获取他的文本节点 \n    let questions_answer = (editor as E).txt.text();\n    let questions_stem = (editor1 as E).txt.text();\n    let type = \"addQuestions/addQuestions\"\n    let res = await _tianjia(title, exam_id, type, subject_id, questions_type_id, (questions_answer as string), (questions_stem as string))\n    alert(res.data.msg)\n  }\n  render() {\n    return (\n      <div className=\"Testadd\">\n        <p>题目信息</p>\n        <p>题干</p>\n        <p> <input value={this.state.tg} onChange={(e) => this.inputChange(e as any)}></input> </p>\n\n        <p>题目主题</p>\n        <div id=\"box1\"></div>\n        <p>\n          请选择考试类型： <select className=\"xiala1\" ref={(el) => { (this.xiala1 as any) = el }}>\n            {\n              this.state.zhouData.map((item: tiDataS, index: number) => {\n                return (\n                  <option value={item.exam_id} key={index}>{item.exam_name}</option>\n                )\n              })\n            }\n          </select>\n        </p>\n        <p> 请选择课程类型：  <select className=\"xiala2\" ref={(el) => { (this.xiala2 as any) = el }}>\n          {\n            this.state.xiuData.map((item: xiuDataS, index: number) => {\n              return (\n                <option value={item.subject_id} key={index}>{item.subject_text}</option>\n              )\n            })\n          }\n        </select>\n        </p>\n        <p> 请选择题目类型：  <select className=\"xiala3\" ref={(el) => { (this.xiala3 as any) = el }}>\n          {\n            this.state.tiData.map((item: zhouDatas, index: number) => {\n              return (\n                <option value={item.questions_type_id} key={index}>{item.questions_type_text}</option>\n              )\n            })\n          }\n        </select>\n        </p>\n        <div id=\"box2\"></div>\n        <p><button onClick={() => this.getInputValue()}>提交</button></p>\n      </div>\n    )\n  }\n}\n// <<<<<<< HEAD\n//     }\n//     xiala1 = \"\"\n//     xiala2 = \"\"\n//     xiala3 = \"\"\n//     componentDidMount() {\n//         //在挂载前找到他\n//         editor = new E(\"#box1\")\n//         //然后实列他\n//         editor1 = new E(\"#box2\")\n//         //创作一个对象\n//         editor.create()\n//         editor1.create()\n//         this.getList()\n//         this.zhouList()\n//         this.leiList()\n//     }\n//     async getList() {\n//         let res = await _zhou()\n//         //周考\n//         console.log(res.data.data)\n//         this.setState({\n//             zhouData: res.data.data\n//         })\n//     }\n//     async zhouList() {\n//         let res = await _grade();\n//         //题型\n//         console.log(res.data.data)\n//         this.setState({\n//             tiData: res.data.data\n//         })\n//     }\n//     async leiList() {\n//         let res = await _room();\n//         //课程\n//         console.log(res.data.data)\n//         this.setState({\n//             xiuData: res.data.data\n//         })\n//     }\n//     inputChange(e: InputEvent) {\n//         let el = (e.target as any).value;\n//         this.setState({\n//             tg: el\n//         })\n//     }\n//     async getInputValue() {\n//         let title = this.state.tg\n//         let exam_id = (this.xiala1 as any).value;\n//         let subject_id = (this.xiala2 as any).value;\n//         let questions_type_id = (this.xiala3 as any).value;\n//         //获取他的文本节点 \n//         let questions_answer = (editor as E).txt.text();\n//         let questions_stem = (editor1 as E).txt.text();\n//         let type = \"addQuestions/addQuestions\"\n//         let res = await _tianjia(title, exam_id, type, subject_id, questions_type_id, (questions_answer as string), (questions_stem as string))\n//         alert(res.data.msg)\n//     }\n//     render() {\n//         return (\n//             <div className=\"Testadd\">\n//                 <p>题目信息</p>\n//                 <p>题干</p>\n//                 <p> <input value={this.state.tg} onChange={(e) => this.inputChange(e as any)}></input> </p>\n\n//                 <p>题目主题</p>\n//                 <div id=\"box1\"></div>\n//                 <p>\n//                     请选择考试类型： <select className=\"xiala1\" ref={(el) => { (this.xiala1 as any) = el }}>\n//                         {\n//                             this.state.zhouData.map((item: tiDataS, index: number) => {\n//                                 return (\n//                                     <option value={item.exam_id} key={index}>{item.exam_name}</option>\n//                                 )\n//                             })\n//                         }\n//                     </select>\n//                 </p>\n//                 <p> 请选择课程类型：  <select className=\"xiala2\" ref={(el) => { (this.xiala2 as any) = el }}>\n//                     {\n//                         this.state.xiuData.map((item: xiuDataS, index: number) => {\n//                             return (\n//                                 <option value={item.subject_id} key={index}>{item.subject_text}</option>\n//                             )\n//                         })\n//                     }\n//                 </select>\n//                 </p>\n//                 <p> 请选择题目类型：  <select className=\"xiala3\" ref={(el) => { (this.xiala3 as any) = el }}>\n//                     {\n//                         this.state.tiData.map((item: zhouDatas, index: number) => {\n//                             return (\n//                                 <option value={item.questions_type_id} key={index}>{item.questions_type_text}</option>\n//                             )\n//                         })\n//                     }\n//                 </select>\n//                 </p>\n//                 <div id=\"box2\"></div>\n//                 <p><button onClick={() => this.getInputValue()}>提交</button></p>\n//             </div>\n//         )\n//     }\n// =======\n//         <p>题目主题</p>\n//         <div id=\"box1\"></div>\n//         <p>\n//           请选择考试类型：{\" \"}\n//           <select\n//             className=\"xiala1\"\n//             ref={(el) => {\n//               (this.xiala1 as any) = el;\n//             }}\n//           >\n//             {this.state.zhouData.map((item: tiDataS, index: number) => {\n//               return (\n//                 <option value={item.exam_id} key={index}>\n//                   {item.exam_name}\n//                 </option>\n//               );\n//             })}\n//           </select>\n//         </p>\n//         <p>\n//           {\" \"}\n//           请选择课程类型：{\" \"}\n//           <select\n//             className=\"xiala2\"\n//             ref={(el) => {\n//               (this.xiala2 as any) = el;\n//             }}\n//           >\n//             {this.state.xiuData.map((item: xiuDataS, index: number) => {\n//               return (\n//                 <option value={item.subject_id} key={index}>\n//                   {item.subject_text}\n//                 </option>\n//               );\n//             })}\n//           </select>\n//         </p>\n//         <p>\n//           {\" \"}\n//           请选择题目类型：{\" \"}\n//           <select\n//             className=\"xiala3\"\n//             ref={(el) => {\n//               (this.xiala3 as any) = el;\n//             }}\n//           >\n//             {this.state.tiData.map((item: zhouDatas, index: number) => {\n//               return (\n//                 <option value={item.questions_type_id} key={index}>\n//                   {item.questions_type_text}\n//                 </option>\n//               );\n//             })}\n//           </select>\n//         </p>\n//         <div id=\"box2\"></div>\n//         <p>\n//           <button onClick={() => this.getInputValue()}>提交</button>\n//         </p>\n//       </div>\n//     );\n//   }\n// >>>>>>> 55bf14e12f8a1261c3653e537e7e065e51469561\n// }\n","/*\n * @Autor        : 高泽康\n * @Date         : 2020-10-20 10:37:13\n * @LastEditTime : 2020-10-21 15:31:59\n * @FilePath     : \\src\\view\\home\\Testlist.tsx\n */\n\nimport React, { Component } from 'react'\nimport { _grade, _leixing } from \"../../api/apiss\"\ninterface Imsg {\n    questions_type_id: string,\n    questions_type_text: string,\n    questions_type_sort: number,\n}\ninterface IState {\n    tg: string,\n    show: boolean,\n    gradedata: Array<Imsg>//数组\n}\nexport default class Testlist extends Component<any, IState>{\n    state = {\n        tg: \"\",\n        show: false,\n        gradedata: []\n    }\n    async bian(questions: string) {\n        let res = await _leixing(questions)\n        if (res.data.code) {\n            alert(res.data.msg)\n        }\n    }\n    componentDidMount() {\n        this.getList()\n    }\n    getList = async () => {\n        let res = await _grade();\n        console.log(res.data.data)\n        console.log(this)\n        this.setState({\n            gradedata: res.data.data\n        })\n    }\n    inputChange(e: InputEvent) {\n        let el = (e.target as any).value\n        this.setState({\n            tg: el\n        })\n    }\n    qd() {\n        this.setState({\n            show: false\n        })\n    }\n    ying() {\n        this.setState({\n            show: true\n        })\n    }\n    qx() {\n        this.setState({\n            show: false\n        })\n    }\n\n    render() {\n        return (\n            <div className=\"Testlist\">\n                <div className=\"shang\">\n                    <p><button onClick={() => this.ying()}>十添加类型</button> </p>\n                </div>\n                <div className=\"xia\">\n                    <table>\n                        <thead>\n                            <tr>\n                                <th>类型ID</th>\n                                <th>类型名称</th>\n                                <th>操作</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {\n                                //item:Imsg 如果不写就会报错\n                                this.state.gradedata.map((item: Imsg, index) => {\n                                    console.log(item)\n                                    return (\n                                        <tr key={index}>\n                                            <th>{item.questions_type_id}</th>\n                                            <th>{item.questions_type_text} </th>\n                                            <th><button onClick={() => this.bian(item.questions_type_id)}>删除</button> </th>\n                                        </tr>\n                                    )\n                                })\n                            }\n                        </tbody>\n                    </table>\n                </div>\n                <div className=\"tan\" style={{ display: this.state.show ? 'block' : \"none\" }}>\n                    <div className=\"ds\">\n                        <p>创建新类型</p>\n                        <p><input placeholder=\"请输入类型\" value={this.state.tg} onChange={(e) => this.inputChange(e as any)}></input> </p>\n                        <p> <button className=\"qd\" onClick={() => this.qd()}> 确定</button>  <button onClick={() => this.qx()}>取消</button> </p>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n}\n","/*\n * @Autor        : 高泽康\n * @Date         : 2020-10-20 10:37:13\n * @LastEditTime : 2020-10-22 15:46:24\n * @FilePath     : \\src\\view\\home\\Testlook.tsx\n */\nimport React, { Component, createRef } from 'react'\nimport { _room, _grade, _zhou, _sou, _cha ,_chaid} from \"../../api/apiss\"\ninterface Imsg {\n    subject_text: string,\n    subject_id: string,\n    index: number,\n\n}\ninterface Zhou {\n    questions_type_id: string,\n    questions_type_text: string,\n    questions_type_sort: number,\n}\ninterface lei {\n    exam_id: string,\n    exam_name: string\n}\ninterface huan {\n    exam_name: string  //\"周考1\"\n    questions_id: string  //\"4t0rar-39c33-wq098t-phh5ht\"\n    questions_type_text: string // \"代码补全\"\n    subject_text: string  //\"javaScript上\"\n    title: string  //\"机器人归位\"\n    user_name: string  //\"dingshaoshan\"\n    qusestions_type_id: string,\n    exam_id: string,\n    subject_id: string\n\n}\ninterface IState {\n    getdata: Array<Imsg>;//数组\n    tabIndex: number;\n    zhouData: Array<Zhou>\n    leiData: Array<lei>\n    fenData: Array<huan>\n    questions_ids: string\n\n}\nexport default class Testlook extends Component<any, IState> {\n    // constructor(props: any) {\n    //     super(props)\n    // }\n    state = {\n        getdata: [],\n        tabIndex: 0,\n        zhouData: [],\n        leiData: [],\n        fenData: [],\n        questions_ids: \"\"\n    }\n    xiala1 = ''\n    // 创建Ref\n    xiala2 = createRef()\n    componentDidMount() {\n        this.getList()\n        this.zhouList()\n        this.leiList()\n        this.fenList()\n    }\n    async getList() {\n        let res = await _room()\n        this.setState({\n            getdata: res.data.data\n        })\n    }\n    async zhouList() {\n        let res = await _grade();\n        this.setState({\n            zhouData: res.data.data\n        })\n    }\n    async leiList() {\n        let res = await _zhou();\n        this.setState({\n            leiData: res.data.data\n        })\n    }\n    async fenList() {\n        let res = await _sou();\n        this.setState({\n            fenData: res.data.data\n        })\n        console.log(this.state.fenData)\n    }\n    tab(index: number) {\n        this.setState({\n            tabIndex: index\n        })\n    }\n    async cha() {\n        let questions_type_id = (this.xiala1 as any).value\n        // (this.xiala2.current as HTMLSelectElement) 断言xiala2的current是：select 元素，然后就能获取到value\n        let exam_id = (this.xiala2.current as HTMLSelectElement).value\n        let subject_id = (this.state.getdata[this.state.tabIndex] as any).subject_id\n        console.log(questions_type_id,exam_id,subject_id)\n        const res = await _cha(questions_type_id, exam_id, subject_id)\n        this.setState({\n            fenData:res.data.data\n         }) \n    }\n   async xian(questions_id: string) {\n        this.setState({\n            questions_ids: questions_id\n        })\n        const res = await _chaid(questions_id)\n            console.log(res)\n            this.props.history.push({\n                pathname: \"/home/usershow/xaingssq\",\n                state: {\n                    obj:res.data.data\n                } \n              })\n    }\n    async  bianji(questions_id:string){\n        const res = await _chaid(questions_id)\n        console.log(res)\n        this.props.history.push({\n            pathname: \"/home/usershow/Teslookbian\",\n            state: {\n                obj:res.data.data\n            } \n          })\n    }\n    render() {\n        return (\n            <div className=\"Testlook\">\n                <div className=\"shang\">\n                    <p className=\"p1\">课程类型:{\n                        this.state.getdata.map((item: Imsg, index: number) => {\n                            return (\n                                <span className={this.state.tabIndex === index ? \"active\" : \"\"} onClick={() => this.tab(index)} key={index}>{item.subject_text}</span>\n                            )\n                        })} </p>\n                    <p className=\"p2\"><span>考试类型:</span>\n                        {/* 在select上写入ref，断言xiala2的类型为：React.RefObject<HTMLSelectElement> */}\n                        <select className=\"xiala2\" ref={(this.xiala2 as React.RefObject<HTMLSelectElement>)}>\n                            {\n                                this.state.leiData.map((item: lei, index: number) => {\n                                    return (\n                                        <option value={item.exam_id} key={index}>{item.exam_name}</option>\n                                    )\n                                })\n                            }\n                        </select>\n                        <span> 题目类型:</span>\n                        <select className=\"xiala1\" ref={(el) => { (this.xiala1 as any) = el }}>\n                            {\n                                this.state.zhouData.map((item: Zhou, index: number) => {\n                                    return (\n                                        <option key={index} value={item.questions_type_id}>{item.questions_type_text}</option>\n                                    )\n                                })\n                            }\n                        </select>\n                        <button onClick={() => { this.cha()}}>查询</button>\n                    </p>\n                </div>\n                <div className=\"xia\">\n                    {\n                        this.state.fenData.map((item: huan, index: number) => {\n                            return (\n                                <div className=\"lie\"  key={index}>\n                                    <div onClick={() => this.xian(item.questions_id)} className=\"dev\">\n                                        <p>{item.title}</p>\n                                        <p>\n                                            <span className=\"exam_name\">{item.exam_name} </span>\n                                            <span className=\"questions_type_text\">{item.questions_type_text}</span>\n                                            <span className=\"subject_text\">{item.subject_text}</span>\n                                        </p>\n                                        <p> <span> {item.user_name} &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 发布者</span> </p>\n                                    </div>\n                                    <div className=\"de2\">\n                                        <span onClick={()=>this.bianji(item.questions_id)} >编辑</span>\n                                    </div>\n                                </div>\n                            )\n                        })\n                    }\n\n                </div>\n            </div>\n        )\n    }\n}\n\n","import React, { useState, useEffect } from \"react\";\nimport { Form, Input, Button, Select, notification } from \"antd\";\nimport { CheckCircleOutlined, CloseCircleOutlined } from \"@ant-design/icons\";\nimport { _identity, _user } from \"@/api/user\";\nimport { User } from \"@/interface\";\n\nconst { Option } = Select;\n\nfunction Add() {\n  const [form] = Form.useForm();\n  const [optionList, setOptions] = useState([]);\n\n  useEffect(() => {\n    (async () => {\n      let res = await _identity();\n      setOptions(res.data.data);\n    })();\n  }, []);\n\n  useEffect(() => {}, [optionList]);\n\n  const onFinish = async (values: User) => {\n    let res = await _user(values);\n    if (res.data.code !== 1) {\n      res.data.err.errors.forEach((item: any) => {\n        openNotification({ code: res.data.code, msg: item.message });\n      });\n    } else {\n      openNotification({ code: res.data.code, msg: res.data.msg });\n    }\n    form.resetFields();\n  };\n\n  const onReset = () => {\n    form.resetFields();\n  };\n\n  const openNotification = ({ code, msg }: { code: number; msg: string }) => {\n    notification.open({\n      message: msg,\n      duration: 3,\n      description: \"\",\n      icon: code === 1 ? <CheckCircleOutlined style={{ color: \"#1890ff\" }} /> : <CloseCircleOutlined style={{ color: \"#ff4d4f\" }} />,\n    });\n  };\n\n  return (\n    <Form form={form} name=\"add\" initialValues={{ remember: true }} onFinish={onFinish}>\n      <Form.Item name=\"user_name\">\n        <Input placeholder=\"请输入用户名\" />\n      </Form.Item>\n\n      <Form.Item name=\"user_pwd\">\n        <Input.Password placeholder=\"请输入密码\" />\n      </Form.Item>\n\n      <Form.Item name=\"identity_id\">\n        <Select style={{ width: \"65%\" }} defaultActiveFirstOption={false} placeholder=\"选择身份id\">\n          {optionList.map((item: any) => {\n            return (\n              <Option key={item.identity_id} value={item.identity_id}>\n                {item.identity_text}\n              </Option>\n            );\n          })}\n        </Select>\n      </Form.Item>\n\n      <Form.Item>\n        <Button type=\"primary\" htmlType=\"submit\">\n          确定\n        </Button>\n        <Button htmlType=\"button\" style={{ marginLeft: \"20px\" }} onClick={onReset}>\n          重置\n        </Button>\n      </Form.Item>\n    </Form>\n  );\n}\nexport default Add;\n","import React, { useState, useEffect } from \"react\";\nimport { Form, Input, Button, Select, notification } from \"antd\";\nimport { CheckCircleOutlined, CloseCircleOutlined } from \"@ant-design/icons\";\nimport { _identity, _userUpUser, _userUser } from \"@/api/user\";\nimport { UpUser } from \"@/interface\";\n\nconst { Option } = Select;\n\nfunction Add() {\n  const [form] = Form.useForm();\n  const [optionList, setOptions] = useState([]);\n  const [optionUser, setOptionUser] = useState([]);\n\n  useEffect(() => {\n    (async () => {\n      let res = await _userUser();\n      console.log(res.data.data);\n      setOptionUser(res.data.data);\n    })();\n    (async () => {\n      let res = await _identity();\n      setOptions(res.data.data);\n    })();\n  }, []);\n\n  useEffect(() => {}, [optionList]);\n\n  useEffect(() => {}, [optionUser]);\n\n  const onFinish = async (values: UpUser) => {\n    let res = await _userUpUser(values);\n    if (res.data.code !== 1) {\n      res.data.err.errors.forEach((item: any) => {\n        openNotification({ code: res.data.code, msg: item.message });\n      });\n    } else {\n      openNotification({ code: res.data.code, msg: res.data.msg });\n    }\n    form.resetFields();\n  };\n\n  const onReset = () => {\n    form.resetFields();\n  };\n\n  const openNotification = ({ code, msg }: { code: number; msg: string }) => {\n    notification.open({\n      message: msg,\n      duration: 3,\n      description: \"\",\n      icon: code === 1 ? <CheckCircleOutlined style={{ color: \"#1890ff\" }} /> : <CloseCircleOutlined style={{ color: \"#ff4d4f\" }} />,\n    });\n  };\n\n  return (\n    <Form form={form} name=\"up\" initialValues={{ remember: true }} onFinish={onFinish}>\n      <Form.Item name=\"user_id\">\n        <Select style={{ width: \"65%\" }} defaultActiveFirstOption={false} placeholder=\"选择用户\">\n          {optionUser.map((item: any) => {\n            return (\n              <Option key={item.user_id} value={item.user_id}>\n                {item.user_name}\n              </Option>\n            );\n          })}\n        </Select>\n      </Form.Item>\n\n      <Form.Item name=\"user_name\">\n        <Input placeholder=\"请输入用户名\" />\n      </Form.Item>\n\n      <Form.Item name=\"user_pwd\">\n        <Input.Password placeholder=\"请输入密码\" />\n      </Form.Item>\n\n      <Form.Item name=\"identity_id\">\n        <Select style={{ width: \"65%\" }} defaultActiveFirstOption={false} placeholder=\"选择身份id\">\n          {optionList.map((item: any) => {\n            return (\n              <Option key={item.identity_id} value={item.identity_id}>\n                {item.identity_text}\n              </Option>\n            );\n          })}\n        </Select>\n      </Form.Item>\n\n      <Form.Item>\n        <Button type=\"primary\" htmlType=\"submit\">\n          确定\n        </Button>\n        <Button htmlType=\"button\" style={{ marginLeft: \"20px\" }} onClick={onReset}>\n          重置\n        </Button>\n      </Form.Item>\n    </Form>\n  );\n}\nexport default Add;\n","import React from \"react\";\nimport { Tabs } from \"antd\";\nimport Add from \"./children/Add\";\nimport Up from \"./children/Up\";\n\nconst { TabPane } = Tabs;\n\nfunction Adduser() {\n  return (\n    <Tabs type=\"card\" className=\"tabs\">\n      <TabPane tab=\"添加用户\" key=\"1\">\n        <Add />\n      </TabPane>\n      <TabPane tab=\"更新用户\" key=\"2\">\n        <Up />\n      </TabPane>\n    </Tabs>\n  );\n}\nexport default Adduser;\n","import React from \"react\";\nimport { Form, Input, Button, Tabs, notification } from \"antd\";\nimport { CheckCircleOutlined, CloseCircleOutlined } from \"@ant-design/icons\";\nimport { _identityEdit } from \"@/api/user\";\n\nconst { TabPane } = Tabs;\n\nfunction Identity() {\n  const [form] = Form.useForm();\n\n  const onFinish = async (values: any) => {\n    let res = await _identityEdit(values);\n    if (res.data.code !== 1) {\n      openNotification({ code: res.data.code, msg: res.data.msg });\n    } else {\n      openNotification({ code: res.data.code, msg: res.data.msg });\n    }\n    form.resetFields();\n  };\n\n  const onReset = () => {\n    form.resetFields();\n  };\n\n  const openNotification = ({ code, msg }: { code: number; msg: string }) => {\n    notification.open({\n      message: msg,\n      duration: 3,\n      description: \"\",\n      icon: code === 1 ? <CheckCircleOutlined style={{ color: \"#1890ff\" }} /> : <CloseCircleOutlined style={{ color: \"#ff4d4f\" }} />,\n    });\n  };\n\n  return (\n    <Tabs type=\"card\" className=\"tabs\">\n      <TabPane tab=\"添加身份\" key=\"3\">\n        <Form form={form} name=\"add\" initialValues={{ remember: true }} onFinish={onFinish}>\n          <Form.Item name=\"identity_text\">\n            <Input placeholder=\"请输入身份名称\" />\n          </Form.Item>\n\n          <Form.Item>\n            <Button type=\"primary\" htmlType=\"submit\">\n              确定\n            </Button>\n            <Button htmlType=\"button\" style={{ marginLeft: \"20px\" }} onClick={onReset}>\n              重置\n            </Button>\n          </Form.Item>\n        </Form>\n      </TabPane>\n    </Tabs>\n  );\n}\nexport default Identity;\n","import React from \"react\";\nimport { Form, Input, Button, Tabs, notification } from \"antd\";\nimport { CheckCircleOutlined, CloseCircleOutlined } from \"@ant-design/icons\";\nimport { _authorityApiEdit } from \"@/api/user\";\n\nconst { TabPane } = Tabs;\n\nfunction AuthorityApi() {\n  const [form] = Form.useForm();\n\n  const onFinish = async (values: any) => {\n    let res = await _authorityApiEdit(values);\n    if (res.data.code !== 1) {\n      openNotification({ code: res.data.code, msg: res.data.msg });\n    } else {\n      openNotification({ code: res.data.code, msg: res.data.msg });\n    }\n    form.resetFields();\n  };\n\n  const onReset = () => {\n    form.resetFields();\n  };\n\n  const openNotification = ({ code, msg }: { code: number; msg: string }) => {\n    notification.open({\n      message: msg,\n      duration: 3,\n      description: \"\",\n      icon: code === 1 ? <CheckCircleOutlined style={{ color: \"#1890ff\" }} /> : <CloseCircleOutlined style={{ color: \"#ff4d4f\" }} />,\n    });\n  };\n\n  return (\n    <Tabs type=\"card\" className=\"tabs\">\n      <TabPane tab=\"添加api接口权限\" key=\"4\">\n        <Form form={form} name=\"add\" initialValues={{ remember: true }} onFinish={onFinish}>\n          <Form.Item name=\"api_authority_text\">\n            <Input placeholder=\"请输入api接口权限名称\" />\n          </Form.Item>\n\n          <Form.Item name=\"api_authority_url\">\n            <Input placeholder=\"请输入api接口权限url\" />\n          </Form.Item>\n\n          <Form.Item name=\"api_authority_method\">\n            <Input placeholder=\"请输入api接口权限方法\" />\n          </Form.Item>\n\n          <Form.Item>\n            <Button type=\"primary\" htmlType=\"submit\">\n              确定\n            </Button>\n            <Button htmlType=\"button\" style={{ marginLeft: \"20px\" }} onClick={onReset}>\n              重置\n            </Button>\n          </Form.Item>\n        </Form>\n      </TabPane>\n    </Tabs>\n  );\n}\nexport default AuthorityApi;\n","import React, { useState, useEffect } from \"react\";\nimport { Tabs, Form, Button, notification, Input } from \"antd\";\nimport { CheckCircleOutlined, CloseCircleOutlined } from \"@ant-design/icons\";\nimport { _viewAuthority, _authorityViewEdit } from \"@/api/user\";\nimport { AuthorityApiView } from \"@/interface\";\n\nconst { TabPane } = Tabs;\n\nfunction AuthorityView() {\n  const [form] = Form.useForm();\n  const [optionList, setOptions] = useState([]);\n\n  useEffect(() => {\n    (async () => {\n      let res = await _viewAuthority();\n      setOptions(res.data.data);\n    })();\n  }, []);\n\n  useEffect(() => {}, [optionList]);\n\n  const onFinish = async (values: AuthorityApiView) => {\n    let res = await _authorityViewEdit(values);\n    if (res.data.code !== 1) {\n      openNotification({ code: res.data.code, msg: res.data.msg });\n    } else {\n      openNotification({ code: res.data.code, msg: res.data.msg });\n    }\n    form.resetFields();\n  };\n\n  const onReset = () => {\n    form.resetFields();\n  };\n\n  const openNotification = ({ code, msg }: { code: number; msg: string }) => {\n    notification.open({\n      message: msg,\n      duration: 3,\n      description: \"\",\n      icon: code === 1 ? <CheckCircleOutlined style={{ color: \"#1890ff\" }} /> : <CloseCircleOutlined style={{ color: \"#ff4d4f\" }} />,\n    });\n  };\n\n  return (\n    <Tabs type=\"card\" className=\"tabs\">\n      <TabPane tab=\"添加视图接口权限\" key=\"5\">\n        <Form form={form} name=\"add\" initialValues={{ remember: true }} onFinish={onFinish}>\n          <Form.Item name=\"view_authority_text\">\n            <Input placeholder=\"请输入视图\" />\n          </Form.Item>\n\n          <Form.Item name=\"view_id\">\n            <Input placeholder=\"请输入视图id\" />\n          </Form.Item>\n\n          <Form.Item>\n            <Button type=\"primary\" htmlType=\"submit\">\n              确定\n            </Button>\n            <Button htmlType=\"button\" style={{ marginLeft: \"20px\" }} onClick={onReset}>\n              重置\n            </Button>\n          </Form.Item>\n        </Form>\n      </TabPane>\n    </Tabs>\n  );\n}\nexport default AuthorityView;\n","import React, { useState, useEffect } from \"react\";\nimport { Tabs, Form, Button, Select, notification } from \"antd\";\nimport { CheckCircleOutlined, CloseCircleOutlined } from \"@ant-design/icons\";\nimport { _identity, _apiAuthority, _setIdentityApi } from \"@/api/user\";\nimport { OnsetIdentityApi } from \"@/interface\";\n\nconst { TabPane } = Tabs;\nconst { Option } = Select;\n\nfunction SetIdentityApi() {\n  const [form] = Form.useForm();\n  const [optionList, setOptions] = useState([]);\n  const [optionApi, setOptionsApi] = useState([]);\n\n  useEffect(() => {\n    (async () => {\n      let res = await _identity();\n      let apiRes = await _apiAuthority();\n      setOptions(res.data.data);\n      setOptionsApi(apiRes.data.data);\n    })();\n  }, []);\n\n  useEffect(() => {}, [optionList]);\n  useEffect(() => {}, [optionApi]);\n\n  const onFinish = async (values: OnsetIdentityApi) => {\n    let res = await _setIdentityApi(values);\n    if (res.data.code !== 1) {\n      openNotification({ code: res.data.code, msg: res.data.msg });\n    } else {\n      openNotification({ code: res.data.code, msg: res.data.msg });\n    }\n    form.resetFields();\n  };\n\n  const onReset = () => {\n    form.resetFields();\n  };\n\n  const openNotification = ({ code, msg }: { code: number; msg: string }) => {\n    notification.open({\n      message: msg,\n      duration: 3,\n      description: \"\",\n      icon: code === 1 ? <CheckCircleOutlined style={{ color: \"#1890ff\" }} /> : <CloseCircleOutlined style={{ color: \"#ff4d4f\" }} />,\n    });\n  };\n\n  return (\n    <Tabs type=\"card\" className=\"tabs\">\n      <TabPane tab=\"给身份设置api接口权限\" key=\"6\">\n        <Form form={form} name=\"add\" initialValues={{ remember: true }} onFinish={onFinish}>\n          <Form.Item name=\"identity_id\">\n            <Select defaultActiveFirstOption={false} placeholder=\"请选择身份id\">\n              {optionList.map((item: any, index) => {\n                return (\n                  <Option key={item.identity_id + index} value={item.identity_id}>\n                    {item.identity_text}\n                  </Option>\n                );\n              })}\n            </Select>\n          </Form.Item>\n\n          <Form.Item name=\"api_authority_id\">\n            <Select defaultActiveFirstOption={false} placeholder=\"请选择api接口权限\">\n              {optionApi.map((item: any) => {\n                return (\n                  <Option key={item.api_authority_id} value={item.api_authority_id}>\n                    {item.api_authority_text}\n                  </Option>\n                );\n              })}\n            </Select>\n          </Form.Item>\n\n          <Form.Item>\n            <Button type=\"primary\" htmlType=\"submit\">\n              确定\n            </Button>\n            <Button htmlType=\"button\" style={{ marginLeft: \"20px\" }} onClick={onReset}>\n              重置\n            </Button>\n          </Form.Item>\n        </Form>\n      </TabPane>\n    </Tabs>\n  );\n}\nexport default SetIdentityApi;\n","import React, { useState, useEffect } from \"react\";\nimport { Tabs, Form, Button, Select, notification } from \"antd\";\nimport { CheckCircleOutlined, CloseCircleOutlined } from \"@ant-design/icons\";\nimport { _identity, _viewAuthority, _setIdentityView } from \"@/api/user\";\nimport { OnsetIdentityView } from \"@/interface\";\n\nconst { TabPane } = Tabs;\nconst { Option } = Select;\n\nfunction SetIdentityView() {\n  const [form] = Form.useForm();\n  const [optionList, setOptions] = useState([]);\n  const [optionApi, setOptionsApi] = useState([]);\n\n  useEffect(() => {\n    (async () => {\n      let res = await _identity();\n      let apiRes = await _viewAuthority();\n      setOptions(res.data.data);\n      setOptionsApi(apiRes.data.data);\n    })();\n  }, []);\n\n  useEffect(() => {}, [optionList]);\n  useEffect(() => {}, [optionApi]);\n\n  const onFinish = async (values: OnsetIdentityView) => {\n    let res = await _setIdentityView(values);\n    if (res.data.code !== 1) {\n      openNotification({ code: res.data.code, msg: res.data.msg });\n    } else {\n      openNotification({ code: res.data.code, msg: res.data.msg });\n    }\n    form.resetFields();\n  };\n\n  const onReset = () => {\n    form.resetFields();\n  };\n\n  const openNotification = ({ code, msg }: { code: number; msg: string }) => {\n    notification.open({\n      message: msg,\n      duration: 3,\n      description: \"\",\n      icon: code === 1 ? <CheckCircleOutlined style={{ color: \"#1890ff\" }} /> : <CloseCircleOutlined style={{ color: \"#ff4d4f\" }} />,\n    });\n  };\n\n  return (\n    <Tabs type=\"card\" className=\"tabs\">\n      <TabPane tab=\"给身份设置视图权限\" key=\"7\">\n        <Form form={form} name=\"add\" initialValues={{ remember: true }} onFinish={onFinish}>\n          <Form.Item name=\"identity_id\">\n            <Select defaultActiveFirstOption={false} placeholder=\"请选择身份id\">\n              {optionList.map((item: any, index) => {\n                return (\n                  <Option key={item.identity_id + index} value={item.identity_id}>\n                    {item.identity_text}\n                  </Option>\n                );\n              })}\n            </Select>\n          </Form.Item>\n\n          <Form.Item name=\"view_authority_id\">\n            <Select defaultActiveFirstOption={false} placeholder=\"请选择api接口权限\">\n              {optionApi.map((item: any, index) => {\n                return (\n                  <Option key={item.view_authority_id + index} value={item.view_authority_id}>\n                    {item.view_authority_text}\n                  </Option>\n                );\n              })}\n            </Select>\n          </Form.Item>\n\n          <Form.Item>\n            <Button type=\"primary\" htmlType=\"submit\">\n              确定\n            </Button>\n            <Button htmlType=\"button\" style={{ marginLeft: \"20px\" }} onClick={onReset}>\n              重置\n            </Button>\n          </Form.Item>\n        </Form>\n      </TabPane>\n    </Tabs>\n  );\n}\n\nexport default SetIdentityView;\n","import React from \"react\";\n\n// 添加用户\nimport Adduser from \"@/component/userAdd/Adduser\";\n// 添加身份\nimport Identity from \"@/component/userAdd/Identity\";\n// 添加api\nimport AuthorityApi from \"@/component/userAdd/AuthorityApi\";\n// 添加视图接口\nimport AuthorityView from \"@/component/userAdd/AuthorityView\";\n// 给身份设置api接口\nimport SetIdentityApi from \"@/component/userAdd/SetIdentityApi\";\n// 给身份设置视图权限\nimport SetIdentityView from \"@/component/userAdd/SetIdentityView\";\n\nfunction Useradd() {\n  return (\n    <div className=\"userAdd\">\n      <Adduser />\n      <Identity />\n      <AuthorityApi />\n      <AuthorityView />\n      <SetIdentityApi />\n      <SetIdentityView />\n    </div>\n  );\n}\n\nexport default Useradd;\n","import React, { Component,ComponentType } from 'react'\nimport { Button } from 'antd';\nimport {Link} from 'react-router-dom';\nimport RouterView from '@/router/RouterView'\n\ninterface ICom {\n    path: string,\n    redirect?: string,\n    component?: ComponentType,\n    children?: ICom,\n    isHoldup?: boolean,\n}\ninterface Iprops {\n    routes: Array<ICom>,\n}\ninterface Istate {\n    title: string\n}\n\nexport default class Usershow extends Component<Iprops,Istate> {\n    constructor (props: Iprops) {\n        super(props);\n        this.state = {\n            title: '用户数据'\n        }\n    }\n    render() {\n        return (\n            <div className=\"usershow\">\n                <div className=\"router-list\">\n                        <Button onClick={() => this.titleChange('用户数据')}>\n                            <Link to=\"/home/usershow/userdata\">用户数据</Link>\n                        </Button>\n                        <Button onClick={() => this.titleChange('身份数据')}>\n                            <Link to=\"/home/usershow/iddata\">身份数据</Link>\n                        </Button>\n                        <Button onClick={() => this.titleChange('api接口权限')}>\n                            <Link to=\"/home/usershow/apioth\">api接口权限</Link>\n                        </Button>\n                        <Button onClick={() => this.titleChange('身份和api接口关系')}>\n                            <Link to=\"/home/usershow/idnapi\">身份和api接口关系</Link>       \n                        </Button>\n                        <Button onClick={() => this.titleChange('视图接口权限')}>\n                            <Link to=\"/home/usershow/viewoth\">视图接口权限</Link>\n                        </Button>\n                        <Button onClick={() => this.titleChange('身份和视图权限关系')}>\n                            <Link to=\"/home/usershow/idnoth\">身份和视图权限关系</Link>\n                        </Button>\n                </div>\n                <div className=\"title\">{this.state.title}</div>\n                <div className=\"view_3\">\n                    <RouterView routes={this.props.routes}/>\n                </div>\n            </div>\n        )\n    }\n    titleChange (msg:string) {\n        this.setState ({\n            title: msg\n        })\n    }\n}\n","import React, { Component } from \"react\";\nimport { Form, Input, Button, Select, DatePicker } from \"antd\";\nimport { inject, observer } from \"mobx-react\";\nimport { _addTest } from \"@/api/exam\";\ninterface IItem{\n  subject_id: string;\n  exam_id: string;\n  title:string;\n  number: string;\n  start_time: string;\n  end_time:string;\n  exam_name:string;\n  subject_text:string;\n}\ninterface IProps{\n  [key:string]:any\n}\n@inject(\"testPaper\")\n@observer\nexport default class Examadd extends Component<IProps> {\n  render() {\n    const { examType, courseType } = this.props.testPaper;\n    return (\n      <div className=\"mAdd\">\n        <h3>添加考试</h3>\n        <div className=\"content\">\n          <Form\n            name=\"nest-messages\"\n            onFinish={this.onFinish}\n            style={{ paddingLeft: 20 }}\n            initialValues={this.state.fields}\n          >\n            <Form.Item\n              name=\"title\"\n              label=\"试卷名称\"\n              rules={[{ required: true }]}\n              style={{ width: 500, marginLeft: 20, paddingTop: 10 }}\n            >\n              <Input />\n            </Form.Item>\n            <Form.Item\n              label=\"考试类型\"\n              style={{ marginLeft: 20 }}\n              name=\"subject_id\"\n            >\n              <Select style={{ width: 120, marginLeft: 10 }}>\n                {examType.map((item:IItem) => {\n                  return (\n                    <Select.Option value={item.exam_id} key={item.exam_id}>\n                      {item.exam_name}\n                    </Select.Option>\n                  );\n                })}\n              </Select>\n            </Form.Item>\n            <Form.Item\n              label=\"选择课程\"\n              style={{ marginLeft: 20 }}\n              name=\"exam_id\"\n            >\n              <Select\n                style={{ width: 120, marginLeft: 10, display: \"flex-block\" }}\n              >\n                {courseType.map((item:IItem) => {\n                  return (\n                    <Select.Option\n                      value={item.subject_id}\n                      key={item.subject_id}\n                    >\n                      {item.subject_text}\n                    </Select.Option>\n                  );\n                })}\n              </Select>\n            </Form.Item>\n\n            <Form.Item\n              style={{ width: 250, marginLeft: 20 }}\n              name=\"number\"\n              label=\"设置题量\"\n              rules={[{ required: true }]}\n            >\n              <Input />\n            </Form.Item>\n            \n           \n           <Form.Item style={{display:'flex'}}>\n                  <Form.Item name=\"start_time\" label=\"创建时间\" style={{display: \"flex-block\"}}>\n                    <DatePicker />\n                    </Form.Item>\n                    <span>-</span>\n                    <Form.Item name=\"end_time\">\n                    <DatePicker />\n                 </Form.Item>\n            </Form.Item>\n            <Form.Item>\n              <Button type=\"primary\" htmlType=\"submit\">\n                创建试卷\n              </Button>\n            </Form.Item>\n          </Form>\n        </div>\n      </div>\n    );\n  }\n  state = {\n    questions:[],\n    fields: {\n      subject_id: \"\",\n      exam_id: \"\",\n      title: \"\",\n      number: \"\",\n      start_time: \"\",\n      end_time: \"\",\n    },\n  };\n  onFinish = async (values:IItem) => {\n    //调用 创建试卷 接口 进行相应添加\n    values = Object.assign(this.state.fields, values, {\n      number: values.number,\n      start_time: Number(values.start_time).toString(),\n      end_time: Number(values.end_time).toString(),\n    });\n    const res = await _addTest(this.state.fields);\n     this.setState({\n      questions:res.data.questions\n     })\n    //创建试卷 跳转到试卷\n    let exam_exam_id=res.data.data.exam_exam_id;\n     console.log(res.data);\n    if (res.data.code === 1) {\n      this.props.history.push({\n        pathname: \"/home/examNew\",\n        state: {\n          title:values.title,\n          time:values.end_time,\n           exam_exam_id:exam_exam_id,\n           questions:this.state.questions\n        },\n      });\n    }\n  };\n}\n","import React, { Component } from \"react\";\nimport { Table, Form, Select, Button } from \"antd\";\nimport { inject, observer } from \"mobx-react\";\n\ninterface Item {\n  name: string;\n  age: string;\n  address: string;\n  exam_name:string;\n  subject_text:string;\n  key: string;\n}\ninterface IProps{\n  testPaper?:any,\n  [key:string]:any\n}\n\n@inject(\"testPaper\")\n@observer\nclass Examlist extends Component<IProps> {\n  render() {\n    const { examType,courseType,realCourseList } =this.props.testPaper;\n    return (\n      <div className=\"big-test\">\n        <h3>试卷列表</h3>\n        <div className=\"test-header\">\n          <Form\n            name=\"basic\"\n            initialValues={{ remember: true }}\n            onFinish={this.onFinish}\n            onFinishFailed={this.onFinishFailed}\n          >\n            <Form.Item>\n              <Form.Item\n                label=\"考试类型\"\n                style={{\n                  display: \"inline-flex\",\n                  width: \"calc(30%)\",\n                  paddingTop: 50,\n                }}\n              >\n                <Select\n                  style={{ width: 120, marginLeft: -50 }}\n                >\n                  {examType.map((item:Item,index:number|string|undefined) => {\n                    return (\n                      <Select.Option value={item.exam_name} key={index}>\n                          {item.exam_name}\n                      </Select.Option>\n                    );\n                  })}\n                </Select>\n              </Form.Item>\n              <Form.Item\n                label=\"课程\"\n                style={{\n                  display: \"inline-flex\",\n                  width: \"calc(30%)\",\n                  paddingTop: 50,\n                }}\n              >\n                <Select\n                  style={{ width: 120, marginLeft: -70 }}\n                >\n                 {courseType.map((item:Item,index:number|string|undefined) => {\n                    return (\n                      <Select.Option value={item.subject_text} key={index}>\n                          {item.subject_text}\n                      </Select.Option>\n                    );\n                  })}\n                </Select>\n              </Form.Item>\n              <Form.Item\n                style={{ display: \"inline-flex\", width: 100, paddingTop: 50 }}\n              >\n                <Button type=\"primary\" htmlType=\"submit\">\n                  搜索\n                </Button>\n              </Form.Item>\n            </Form.Item>\n          </Form>\n        </div>\n        <div className=\"test\">\n          <p>试卷列表</p>\n          <Table\n            rowClassName={() => \"editable-row\"}\n            bordered\n            dataSource={realCourseList.slice()}\n            columns={this.state.columns}\n          />\n        </div>\n      </div>\n    );\n  }\n  state = {\n    dataSource:[],\n    columns: [\n      {\n        title: \"试卷信息\",\n        dataIndex: \"name\",\n      },\n      {\n        title: \"班级\",\n        dataIndex: \"grade\",\n      },\n      {\n        title: \"创建人\",\n        dataIndex: \"person\",\n      },\n      {\n        title: \"开始时间\",\n        dataIndex: \"start_time\",\n      },\n      {\n        title: \"结束时间\",\n        dataIndex: \"end_time\",\n      },\n      {\n        title: \"操作\",\n        dataIndex: \"operation\",\n        render: (text:object, record:object,index:Number) =>\n          this.state.dataSource.length<1 ? <span onClick={()=>{this.goDetail(text,record,index)}} style={{color:'skyblue'}}>详情</span> : null,\n      },\n    ],\n    count: 2,\n  };\n \n  async componentDidMount() {\n    //获取考试类型数据\n    this.props.testPaper.getExamType();\n    this.props.testPaper.allCourseType();\n    this.props.testPaper.allCourseList();\n  }\n  onFinish = (values: any) => {\n    console.log(\"Success:\", values);\n  };\n  onFinishFailed = (errorInfo: any) => {\n    console.log(\"Failed:\", errorInfo);\n  };\n  goDetail=(text: Object,record:any,index:Number)=>{\n  \n      //跳转详情\n      this.props.history.push({\n         pathname:'/home/examDetail',\n         state:{\n                  key:record.key\n               }\n      })\n    \n  }\n}\n\nexport default Examlist;\n","import React, { Component } from 'react'\nimport { inject, observer } from \"mobx-react\";\nimport { Modal, Button,Select,Form, Tag } from 'antd';\nimport {_getQuestionType,_getTestList,_search,_updateTest} from '@/api/exam';\ninterface IProps\n{\n  location:IItem;\n  testPaper:any;\n   [key:string]:any\n}\ninterface IItem\n{\n  questions_id:string;\n  subject_id:string;\n  subject_text:string;\n  exam_name:string;\n  questions_type_text:string;\n  questions_type_id:string;\n  title:string;\n  state:any;\n  questions_stem:string;\n  questions_answer:string;\n  exam_id:string;\n  user_name:string;\n  exam_exam_id:string;\n}\n\n@inject(\"testPaper\")\n@observer\nexport default class ExamNew extends Component<IProps> {\n    render() {\n        const { examType,courseType} = this.props.testPaper;\n        return (\n            <div className=\"exam_big\">\n                 <div className=\"exam_small\">\n                 <Button type=\"primary\" onClick={this.showModal} style={{marginTop:10,marginLeft:10}}>\n                       + 添加新题\n                 </Button>\n                   <h3 style={{textAlign:\"center\"}}>{this.props.location.state.title}</h3>\n                   <div style={{textAlign:\"center\",margin:0}}>\n                      <span>考试时间：1小时30分钟 监考人：刘于 开始考试时间:{this.props.location.state.time} 阅卷人：刘于</span>\n                   </div>\n                   {/* 获取详情 */}\n                   <div className='allList'>\n                   {\n                        this.state.allTestList.map((ite:IItem,index:number) =>\n                        {\n                            return  <div style={{border:'1px solid #ccc',marginTop:20,position:'relative'}} key={ite.questions_id}>\n                                          <div style={{position:'absolute',right:10,top:10,color:'#00f'}} onClick={()=>{this.delItem(index)}}>删除</div>\n                                          <p>{ite.title}</p>\n                                          <p>\n                                              {ite.questions_stem}\n                                          </p>\n                                          <p style={{backgroundColor:'#ccc',marginTop:10}}>\n                                              {ite.questions_answer}\n                                          </p>\n                                  </div>\n                        })\n                     }\n                   </div>\n                  <Button type=\"primary\" onClick={()=>{this.createTest()}}>创建试卷</Button>\n        <Modal\n          title=\"所有题目\"\n          visible={this.state.visible}\n          className=\"model\"\n          footer={false}\n        >\n           <Button type=\"primary\" onClick={()=>{this.setState({visible:false})}} style={{position:'absolute',right:0,top:10}}>点击取消</Button>\n            <div>\n            {/* 课程类型 */}\n               <span>课程类型</span>\n                <span style={{marginLeft:20}}>全部</span>\n               {courseType.slice().map((item:IItem,index:Number) => {\n                    return (\n                      <span  \n                         key={item.subject_id} \n                         style={{marginLeft:10}} \n                         className={this.state.initNum===index?'active':''}\n                         onClick={()=>{this.changeIndex(index)}}\n                         >\n                          {item.subject_text}\n                      </span>\n                    );\n                  })}\n            </div>\n             <div>\n                 {/* 考试类型，题目类型，查询 */}\n                  <Form style={{marginTop:20}}>\n                  <Form.Item \n                  label=\"考试类型\"\n                  style={{ display: \"inline-flex\"}}\n                  >\n                    <Select  style={{ width: 120,  display: \"inline-flex\"}} onChange={this.handleChangeTest}>\n                            {examType.map((item: IItem,index:string | number | undefined) => {\n                            return (\n                            <Select.Option value={item.exam_name} key={index}>\n                                {item.exam_name}\n                            </Select.Option>\n                            );\n                        })}\n                    </Select>\n            </Form.Item> \n                  <Form.Item\n                  style={{ display: \"inline-flex\",marginLeft:10}}\n                  label=\"题目类型\"\n                  rules={[{ required: true }]}\n                >\n                   <Select style={{width:120,marginLeft:10, display: \"inline-flex\"}} onChange={this.handleChangeTitle}>\n                   {this.state.subjectType.map((item: IItem) => {\n                    return (\n                      <Select.Option value={item.questions_type_text} key={item.questions_type_id}>\n                          {item.questions_type_text}\n                      </Select.Option>\n                    );\n                  })}\n                    </Select>\n                </Form.Item>\n                 <Form.Item style={{ display: \"inline-flex\",marginLeft:10}}>\n                      <Button type=\"primary\" htmlType=\"submit\" onClick={()=>{this.searchTest()}}>\n                          查询\n                      </Button>\n                </Form.Item>\n                  </Form>\n             </div>\n             {\n               this.state.allTest.length?<div className=\"allTest\">\n               {\n                 this.state.allTest.map((item:IItem,index:string | number | null | undefined)=>\n                 {\n                    return  <dl key={index}>\n                                <dt>\n                                    <p>{item.title}</p>\n                                     <div>\n                                         <Tag color=\"success\">{item.questions_type_text}</Tag>\n                                          <Tag color=\"processing\">{item.subject_text}</Tag>\n                                          <Tag color=\"error\">{item.exam_name}</Tag>\n                                     </div>\n                                      <p>{item.user_name}发布</p>\n                                </dt>\n                                <dd>\n                                      <span style={{color:'skyblue'}} onClick={()=>{this.addDetail(item.questions_id)}}>添加</span>\n                                      <span style={{marginLeft:10,color:'skyblue'}} onClick={()=>{this.showDetail(item.questions_id)}}>详情</span>\n                                </dd>\n                            </dl>\n                 })\n               }\n             </div>:'暂无数据'\n             }\n        </Modal>\n       </div>\n       <Modal\n          visible={this.state.flag}\n          onOk={this.handleOk}\n          onCancel={this.handleCancel}\n        >\n          {\n            this.state.filterData.map((ite:IItem) =>\n            {\n              return  <div style={{border:'1px solid #ccc',marginTop:20}} key={ite.questions_id}>\n                            <p>{ite.title}</p>\n                            <p>\n                                {ite.questions_stem}\n                            </p>\n                             <p style={{backgroundColor:'#ccc',marginTop:10}}>\n                                {ite.questions_answer}\n                            </p>\n                      </div>\n            })\n          }\n        \n        </Modal>\n            </div>\n        )\n    }\n    state = { \n        visible: false,\n        initNum:0,\n        subjectType:[],\n        allTest:[],\n        columns:[],\n        flag:false,\n        filterData:[],\n        test:'',\n        title:'',\n        allTestList:[]\n     }\n     async createTest()\n     {\n        //创建试卷 获取所有的数据列表进行相应创建\n        let arr:any=[];\n        this.state.allTestList.forEach((item:any) =>\n        {\n            arr.push(item.questions_id)\n        })\n        let res=await _updateTest(arr,this.props.location.state.exam_exam_id);\n        console.log(res)\n        if(res.data.code===1)\n        {\n          this.props.history.push('/home/examlist')\n        }\n        \n     }\n     delItem(index:number)\n     {\n         this.state.allTestList.splice(index,1);\n         this.setState({\n          allTestList:this.state.allTestList\n         })\n     }\n     addDetail=(questionId:string)=>\n     {\n       //添加\n       let result=this.state.allTest.filter((item:IItem) =>\n                        {\n                          return item.questions_id===questionId\n                        })[0];\n        this.state.allTestList.push(result);\n       \n     }\n    changeIndex(index:Number)\n    {\n        this.setState({\n            initNum:index\n        })\n    }\n     showModal = async() => {\n        this.setState({\n          visible: true,\n        });\n        let res=await _getQuestionType();\n        this.setState({\n          subjectType:res.data.data\n        })\n      };\n      showDialog=() =>\n      {\n        this.setState({\n            visible:!this.state.visible\n        })\n      }\n      handleChangeTest=(value:Object)=> {\n        this.setState({\n            test:value\n        })\n      }\n      handleChangeTitle=(value: Object)=> {\n        this.setState({\n          title:value\n      })\n      }\n      async searchTest()\n      {\n         let subject_id=this.props.testPaper.courseType[this.state.initNum].subject_id;\n        \n         let exam_id=(this.props.testPaper.examType.filter((item:IItem) => item.exam_name===this.state.test))[0].exam_id;\n       \n        let questions_type_id=(this.state.subjectType.filter((item:IItem) =>item.questions_type_text===this.state.title)[0] as any).questions_type_id;\n          //获取数据进行相应搜索  调用接口\n         \n          const result=await _search(subject_id,\n            exam_id,\n            questions_type_id);\n            this.setState({\n              allTest:result.data.data\n            })\n            console.log(this.state.allTest);\n          }\n      showDetail(id:string)\n      {\n        console.log(id);\n        //点击出现一个弹框 +form表单\n         this.setState({\n             flag:true,\n             filterData:this.state.allTest.filter((item:IItem) =>\n                        {\n                          return item.questions_id===id\n                        })\n         })\n      }\n      async componentDidMount()\n      {\n          let res=await _getTestList();\n          this.setState({\n            allTest:res.data.data,\n            questions:this.props.location.state.questions\n          })\n      }\n      handleOk = () => {\n        this.setState({\n          flag: false,\n        });\n      };\n    \n      handleCancel = () => {\n        this.setState({\n          flag: false,\n        });\n      };\n    }\n","import React, { Component } from \"react\";\nimport { Button } from \"antd\";\nimport { _show } from \"@/api/exam\";\ninterface IProps\n{\n    history:IItem;\n    location:IItem;\n}\ninterface IItem\n{\n    push:any;\n    questions_id:string;\n    questions_stem:string;\n    state:any;\n    questions_answer:string;\n}\nexport default class ExamDetail extends Component<IProps> {\n  render() {\n    return (\n      <div>\n        <h2>试卷详情</h2>\n        <Button\n          onClick={() => {\n            this.props.history.push('/home/examlist');\n          }}\n          type=\"primary\"\n        >\n          返回\n        </Button>\n        <div className=\"content\">\n          {this.state.list.map((item: IItem) => {\n            return (\n              <div key={item.questions_id}>\n                <p>{item.questions_stem}</p>\n                <div style={{ backgroundColor: \"#ccc\" }}>\n                  {item.questions_answer}\n                </div>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    );\n  }\n  state = {\n    list: [],\n  };\n  async componentDidMount() {\n    let result = await _show(this.props.location.state.key);\n    this.setState({\n      list: result.data.data.questions,\n    });\n  }\n\n  componentWillUnmount(){\n      this.setState=()=>false;\n  }\n}\n","import  request from \"@/utils/request\"\nimport { IdcardFilled } from \"@ant-design/icons\"\nexport function _grade(){\n    // let url = \"/manger/grade\"\n\n    return request.get(\"/api/manger/grade\")\n}\nexport function _class(){\n    // let url = \"/manger/room\"\n    \n    return request.get(\"/api/manger/room\")\n}\nexport function _subject(){\n    let url =\"/api/exam/subject\"\n\n    return request.get(url)\n}\nexport function _addGrade(obj:object){\n    let url = \"/api/manger/grade\";\n    // console.log(obj,url);\n\n    request.post(url,{...obj})\n}\nexport  function _del_grade(grade_id:string){\n   \n    let url = \"/api/manger/grade/delete\";\n    console.log(grade_id,url);\n    request.delete(url,{params:{grade_id:grade_id}})\n}\nexport  function _updata(grade_id:string,room_id:string,subject_id:string){\n   \n    let url = \"/api/manger/grade/updata\";\n    return request.put(url,{grade_id,room_id,subject_id})\n\n}\nexport function _de_room(id:any){\n    let url = \"/api/mange/room/delete\"\n    let room_id= id\n   request.delete(url,{params:{room_id}})\n}\n\nexport function _addRoom(room_text:string){\n    console.log(room_text)\n    let url =\"/api/manger/room\"\n    request.post(url,{room_text})\n}\nexport function _student(){\n    let url =\"/api/manger/student\"\n\n    return request.get(url)\n}\nexport function  _del_student(student_id:string){\n    let url =`/api/manger/student/${student_id}`\n    console.log(student_id,url)\n    return request.delete(url)\n}","import React, { Component } from 'react';\nimport 'antd/dist/antd.css';\nimport { Form, Input, Button, Select, } from 'antd';\nimport {_class,_subject, _grade,_updata} from '@/api/manger'\n//\nimport { FormInstance } from 'antd/lib/form/Form';\nconst { Option } = Select;\nconst layout = {\n  labelCol: {\n    span: 8,\n  },\n  wrapperCol: {\n    span: 16,\n  },\n};\nconst tailLayout = {\n  wrapperCol: {\n    offset: 8,\n    span: 16,\n  },\n};\ninterface Iprops{\n  list:any;\n  subject:any;\n  room:any\n}\n\nclass FormPublice extends Component<Iprops>{\n  state={\n    subject:[],\n    room:[],\n    list:[]\n  }\n \n    formRef = React.createRef<FormInstance>();\n  onGenderChange = (value: string) => {\n    this.formRef.current?.setFieldsValue({\n      note: `Hi, ${value === 'male' ? 'man' : 'lady'}!`,\n    });\n  };\n  onFinish = (values: any) => {\n\n    console.log(values.subject_id);\n\n    this.updata(values)\n  };\n  onReset = () => {\n    this.formRef.current?.resetFields();\n  };\n  onFill = () => {\n    this.formRef.current?.setFieldsValue({\n      note: 'Hello world!',\n      gender: 'male',\n    });\n  };\n  async grade(){\n    let res =   await _grade()\n    this.setState({\n        list:res.data.data\n    })\n    console.log(this.state.list)\n  }\n  \n    \n  \n  componentDidMount(){\n    this.class()\n    this.subject()\n    this.grade()\n  }\n  async updata(values:any){\n    console.log(this.state,values)\n    let grade=this.state.list.filter((item:any)=>{\n      return  item.grade_name===values.grade_name;\n    })\n    let room=this.state.room.filter((item:any)=>{\n      return  item.room_text===values.room_id;\n    })\n    let subject=this.state.subject.filter((item:any)=>{\n      return  item.subject_text===values.subject_id;\n    })\n    let room_id = (room as any)[0].room_id\n    let subject_id = (subject as any)[0].subject_id\n    let grade_id=(grade as any)[0].grade_id\n    console.log(grade_id,subject_id,room_id)\n    // console.log('*******');\n    // console.log(values);\n    // //{grade_name: \"1611B\", room_id: \"34303\", subject_id: \"javaScript下\"}\n    // console.log('*******');\n\n    await _updata(grade_id,subject_id,grade_id)\n  }\n  async class(){\n    let res = await _class()\n    this.setState(\n        {\n            room:res.data.data\n        }\n    )\n  }\n  async subject(){\n    let res= await _subject();\n\n    this.setState({\n        subject:res.data.data\n    })\n}\n\n    render() {\n        return (\n            <div>\n                 <Form {...layout} ref={this.formRef} name=\"control-ref\" onFinish={this.onFinish}>\n        <Form.Item\n          name=\"grade_name\"\n          label=\"班级\"\n          \n          rules={[\n            {\n              required: true,\n            },\n          ]}\n        >\n          <Input defaultValue={this.props.list[0].grade_name} />\n        </Form.Item>\n        <Form.Item\n          name=\"room_id\"\n          label=\"教室号\"\n          rules={[\n            {\n              required: true,\n            },\n          ]}\n        >\n          <Select\n            placeholder={this.props.list[0].room_text}\n            onChange={this.onGenderChange}\n            allowClear\n          >\n            {\n              this.state.room.map((item:any)=>{\n                 return <Option value={item.room_text} key ={item.room_id}>{item.room_text}</Option>\n              })\n            }\n\n          </Select>\n        </Form.Item>\n        <Form.Item\n          name=\"subject_id\"\n          label=\"课程\"\n          rules={[\n            {\n              required: true,\n            },\n          ]}\n        >\n          <Select\n            placeholder={this.props.list[0].subject_text}\n            onChange={this.onGenderChange}\n            allowClear\n          >\n           {\n              this.state.subject.map((item:any)=>{\n                 return <Option value={item.subject_text} key ={item.room_id}>{item.subject_text}</Option>\n              })\n            }\n          </Select>\n        </Form.Item>\n        <Form.Item\n          noStyle\n          shouldUpdate={(prevValues, currentValues) => prevValues.gender !== currentValues.gender}\n        >\n          {({ getFieldValue }) => {\n            return getFieldValue('gender') === 'other' ? (\n              <Form.Item\n                name=\"customizeGender\"\n                label=\"Customize Gender\"\n                rules={[\n                  {\n                    required: true,\n                  },\n                ]}\n              >\n                <Input />\n              </Form.Item>\n            ) : null;\n          }}\n        </Form.Item>\n        <Form.Item {...tailLayout}>\n          <Button type=\"primary\" htmlType=\"submit\">\n            Submit\n          </Button>\n          <Button htmlType=\"button\" onClick={this.onReset}>\n            Reset\n          </Button>\n  \n        </Form.Item>\n      </Form>\n                \n            </div>\n        );\n    }\n}\n\nexport default FormPublice;","import React, { Component } from 'react'\nimport 'antd/dist/antd.css';\nimport FormPublice from \"./FormPublice\"\nimport { Modal } from 'antd';\n\ninterface Iprops{\n  change:any;\n  id:string;\n  list:any;\n  subject:any;\n  room:any\n}\n\n\n\nexport default class change extends Component<Iprops> {\n    state = { \n      visible: false ,\n      list:[]\n    };\n    constructor(props:any){\n      super(props)\n     \n    }\n  showModal = (e:any[],id:string) => {\n    let b =e.filter((item:any)=>{\n      return item.grade_id===id\n    })\n    this.setState({\n      visible: true,\n      list:b\n    });\n  };\n  handleOk = (e: any) => {\n\n    this.setState({\n      visible: false,\n    });\n  };\n\n  handleCancel = (e: any) => {\n    this.setState({\n      visible: false,\n    });\n  };\n    render() {\n      console.log(this.props.room,this.props.subject)\n        return (\n            <span onClick={()=>{this.showModal(this.props.list,this.props.id)}}>\n                <span onClick={()=>this.props.change(this.props.id)}>\n                编辑\n                </span>\n        <Modal\n          title=\"Basic Modal\"\n          visible={this.state.visible}\n          onOk={this.handleOk}\n          onCancel={this.handleCancel}\n        >\n\n\n\n          \n         <FormPublice list={this.state.list} room = {this.props.room}    subject={this.props.subject}/>\n        </Modal>\n            </span>\n        )\n    }\n}\n\n","import React, { Component } from 'react'\nimport {_grade,_class,_subject,_addGrade,_del_grade} from '@/api/manger'\nimport \"./class.css\"\nimport 'antd/dist/antd.css';\nimport {Layout, Button,  Modal, Select, Form, Input,} from \"antd\";\nimport { FormInstance } from 'antd/lib/form/Form';\nimport Change from \"./class/change\"\n\nconst {  Content,   } = Layout;\nconst { Option } = Select;\nconst layout = {\n  labelCol: {\n    span: 8,\n  },\n  wrapperCol: {\n    span: 16,\n  },\n};\nconst tailLayout = {\n  wrapperCol: {\n    offset: 8,\n    span: 16,\n  },\n};\n\n\ninterface Iprops{\n    // state:a\n}\ninterface Istate{\n    // list:<Ilist>\n  \n}\ninterface Ilist{\n    grade_name:string\n}\n\nexport default class Class extends Component<Iprops,Istate>{\n    formRef = React.createRef<FormInstance>()\n    componentDidMount(){\n        this.grade()\n        this.class()\n        this.subject()\n    }\n    state={\n        list:[],\n        visible: false,\n        room:[],\n        subject:[],\n        changeList:[]\n\n    }\n    //获取课程名接口\n\n    async subject(){\n        let res= await _subject();\n\n        this.setState({\n            subject:res.data.data\n        })\n        console.log(res.data.data)\n    }\n    //获取班级接口\n    async grade(){\n      let res =   await _grade()\n      this.setState({\n          list:res.data.data\n      })\n      console.log(this.state.list)\n    }\n\n    //获取教室接口\n    async class(){\n        let res = await _class()\n        this.setState(\n            {\n                room:res.data.data\n            }\n        )\n        console.log(this.state.room)\n    }\n    //对话框\n    showModal = () => {\n    this.setState({\n        visible: true,\n      });\n    };\n\n    //增加班级\n    async addGrade(values:object){\n        await _addGrade(values)\n       \n\n    }\n\n    //删除\n    del(grade_id:string){\n        this.delGrade(grade_id)\n    }\n    async delGrade(grade_id:string){\n        await _del_grade(grade_id)\n    }\n    //点击编辑\n    change(grade_id:string){\n      console.log(grade_id)\n    }\n\n\n  \n    handleOk = (e: any) => {\n      console.log(e);\n      \n      this.setState({\n        visible: false,\n      });\n    };\n  \n    handleCancel = (e: any) => {\n      console.log(e);\n      this.setState({\n        visible: false,\n      });\n    };\n    onGenderChange = (value:any) => {\n        \n        this.formRef.current?.setFieldsValue({\n          note: `Hi, ${value === 'male' ? 'man' : 'lady'}!`,\n        });\n        \n      };\n       onFinish = (values: any) => {\n        this.addGrade(values)\n    // console.log(values)\n        this.setState({\n            visible: false,\n          });\n      };\n      onReset = () => {\n        \n        this.formRef.current?.resetFields();\n        \n      };\n      onFill = () => {\n        this.formRef.current?.setFieldsValue({\n          note: 'Hello world!',\n          gender: 'male',\n        });\n        this.setState({\n            visible: false,\n          });\n      };\n    //\n    render() {\n      // console.log(this.state.room)\n      \n        return (\n\n            <div>\n               <Layout>\n              \n                <Content style={{ margin: \"24px 16px 0\" }}>\n                <div className=\"abc\" style={{ padding: 24, background: \"#fff\",  overflowY: \"scroll\" }}>\n                   <p>\n                {/* 添加班级 */}\n                    <Button type=\"primary\" onClick={this.showModal}>\n                    +添加班级\n                    </Button>\n\n                    <Modal\n                     title=\"添加试题\"\n                     visible={this.state.visible}\n                     onOk={this.handleOk}\n                     onCancel={this.handleCancel}\n                    >\n                        <Form {...layout} ref={this.formRef} name=\"control-ref\" onFinish={this.onFinish}>\n        <Form.Item\n          name=\"grade_name\"\n          label=\"班级名\"\n          rules={[\n            {\n              required: true,\n            },\n          ]}\n        >\n          <Input />\n        </Form.Item>\n       \n        <Form.Item\n          name=\"room_id\"\n          label=\"课程名\"\n          rules={[\n            {\n              required: true,\n            },\n          ]}\n        >\n            <Select\n            placeholder=\"Select a option and change input text above\"\n            onChange={this.onGenderChange}\n            allowClear\n          >\n            \n            {/* <Option value=\"female\">female</Option>\n            <Option value=\"other\">other</Option> */}\n            {\n                this.state.subject.map((item:any,index)=>{\n                return <Option value={item.subject_text}>{item.subject_text}</Option>\n                })\n            }\n          </Select>\n          \n        </Form.Item>\n\n        <Form.Item\n          name=\"subject_id\"\n          label=\"教室号\"\n          rules={[\n            {\n              required: true,\n            },\n          ]}\n        >\n          <Select\n            placeholder=\"Select a option and change input text above\"\n            onChange={this.onGenderChange}\n            allowClear\n          >\n            \n            {\n                this.state.room.map((item:any,index)=>{\n                return <Option value={item.room_id}>{item.room_text}</Option>\n                })\n            }\n          </Select>\n          \n        </Form.Item>\n        <Form.Item\n          noStyle\n          shouldUpdate={(prevValues, currentValues) => prevValues.gender !== currentValues.gender}\n        >\n          {({ getFieldValue }) => {\n            return getFieldValue('gender') === 'other' ? (\n              <Form.Item\n                name=\"customizeGender\"\n                label=\"Customize Gender\"\n                rules={[\n                  {\n                    required: true,\n                  },\n                ]}\n              >\n                <Input />\n              </Form.Item>\n            ) : null;\n          }}\n        </Form.Item>\n        <Form.Item {...tailLayout}>\n          <Button type=\"primary\" htmlType=\"submit\">\n            Submit\n          </Button>\n          <Button htmlType=\"button\" onClick={this.onReset}>\n            Reset\n          </Button>\n          {/* <Button type=\"link\" htmlType=\"button\" onClick={this.onFill}>\n            Fill form\n          </Button> */}\n        </Form.Item>\n      </Form>\n                    </Modal>\n                   </p>\n                    <div>\n                    <p className='bigbox'>\n                    <span>班级名</span>\n                    <span>课程名</span>\n                    <span>教室号</span>\n                    <span>操作</span>\n                    </p>\n                    <div >\n                        {\n                            this.state.list.map((item:any)=>{\n                               return (\n                                   <p className='box' >\n                                       <span >\n                                           {item.grade_name}\n                                       </span>\n                                       <span>{item.subject_text}</span>\n                                       <span>{item.room_text}</span>\n                                       <span className=\"font\">\n                                            <span><Change key ={item.room_id} change={this.change} id={item.grade_id} list={this.state.list} subject={this.state.subject} room ={this.state.room} /></span>\n                                            |\n                                            <span onClick={()=>{this.del(item.grade_id) }}>删除</span>\n                                        </span>\n                                   </p>\n                               )\n                            })\n                        }\n                    </div>\n                    </div>\n                   \n                </div>\n                </Content>\n               \n            </Layout>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport { Layout, Button, Modal, Select, Form, Input, } from \"antd\";\nimport \"@/view/home/class.css\"\nimport 'antd/dist/antd.css';\nimport { _class, _del_grade,_addRoom} from \"@/api/manger\"\nimport { FormInstance } from 'antd/lib/form/Form';\nconst { Content, } = Layout;\nconst { Option } = Select;\n\ninterface Iprops {\n    stype: any\n}\n// interface sss{\n//     type:string\n// }\ninterface IState {\n    stype: string\n    visible: boolean\n    list: any\n}\n\nconst layout = {\n    labelCol: {\n        span: 8,\n    },\n    wrapperCol: {\n        span: 16,\n    },\n};\nconst tailLayout = {\n    wrapperCol: {\n        offset: 8,\n        span: 16,\n    },\n};\nclass laye extends Component<Iprops, IState>{\n    state = {\n        visible: false,\n        stype: \"\",\n        list: [],\n    };\n\n    formRef = React.createRef<FormInstance>();\n    onGenderChange = (value: any) => {\n        this.formRef.current?.setFieldsValue({\n            note: `Hi, ${value === 'male' ? 'man' : 'lady'}!`,\n        });\n    };\n    onFinish = (values: any) => {\n        // console.log(values);\n        let  room_text= values.name\n        this.addroom(room_text)\n        this.setState({\n            visible:false\n        })\n    };\n    onReset = () => {\n        this.formRef.current?.resetFields();\n    };\n    onFill = () => {\n        this.formRef.current?.setFieldsValue({\n            note: 'Hello world!',\n            gender: 'male',\n        });\n    };\n    constructor(props: any) {\n        super(props)\n    }\n    componentDidMount() {\n        this.setState({\n            stype: this.props.stype\n        })\n        this.room()\n    }\n    //获取教室\n    async room() {\n        let res = await _class()\n        this.setState({\n            list: res.data.data\n        })\n        console.log(res.data.data)\n    }\n    //教室删除\n    del(id: any) {\n        // console.log(id)\n        this.dedl(id)\n    }\n    //添加教室\n    async  addroom(room_text:string){\n            await _addRoom(room_text)\n    }\n\n    async dedl(id: string) {\n        await _del_grade(id)\n    }\n    \n    showModal = () => {\n        this.setState({\n            visible: true,\n        });\n    };\n\n    handleOk = (e: any) => {\n        console.log(e);\n        let  room_text= e.name\n        this.addroom(room_text)\n        this.setState({\n            visible: false,\n        });\n    };\n\n    handleCancel = (e: any) => {\n        console.log(e);\n        let  room_text= e.name\n        this.addroom(room_text)\n        this.setState({\n            visible: false,\n        });\n    };\n    render() {\n        return (\n            <Layout>\n                <Content style={{ margin: \"24px 16px 0\" }}>\n\n                    <div className=\"abc\" style={{ padding: 24, background: \"#fff\", overflowY: \"scroll\" }}>\n                        <p >\n                            <Button type=\"primary\" onClick={this.showModal}>\n                                {this.state.stype}\n                            </Button>\n                            <Modal\n                                title=\"Basic Modal\"\n                                visible={this.state.visible}\n                                onOk={this.handleOk}\n                                onCancel={this.handleCancel}\n                            >\n\n                                <Form {...layout} ref={this.formRef} name=\"control-ref\" onFinish={this.onFinish}>\n                                    <Form.Item\n                                        name=\"name\"\n                                        label=\"教室名称\"\n                                        rules={[\n                                            {\n                                                required: true,\n                                            },\n                                        ]}\n                                    >\n                                        <Input />\n                                    </Form.Item>\n                                    <Form.Item\n                                        noStyle\n                                        shouldUpdate={(prevValues, currentValues) => prevValues.gender !== currentValues.gender}\n                                    >\n                                        {({ getFieldValue }) => {\n                                            return getFieldValue('gender') === 'other' ? (\n                                                <Form.Item\n                                                    name=\"customizeGender\"\n                                                    label=\"Customize Gender\"\n                                                    rules={[\n                                                        {\n                                                            required: true,\n                                                        },\n                                                    ]}\n                                                >\n                                                    <Input />\n                                                </Form.Item>\n                                            ) : null;\n                                        }}\n                                    </Form.Item>\n                                    <Form.Item {...tailLayout}>\n                                        <Button type=\"primary\" htmlType=\"submit\">\n                                            Submit\n                                        </Button>\n                                      \n                                    </Form.Item>\n                                </Form>\n                            </Modal>\n\n                        </p>\n                        <p className='bigbox'>\n                            <span>教室号</span>\n                            <span>操作</span>\n                        </p>\n                        <div >\n                            {\n                                this.state.list.map((item: any, index) => {\n                                    return (\n                                        <p className='box'>\n                                            <span key={item.room_id}>\n                                                {item.room_text}\n                                            </span>\n                                            <span className=\"font\">\n\n                                            <span onClick={() => { this.del(item.room_id) }}>删除</span>\n                                            </span>\n                                        </p>\n                                    )\n                                })\n                            }\n                        </div>\n                    </div>\n\n                </Content>\n            </Layout>\n        );\n    }\n}\n\nexport default laye;","import React, { Component } from 'react'\nimport Laye from \"@/components/laye\"\n\nexport default class Classroom extends Component {\n    render() {\n        const stype=\"+ 添加教室\"\n        return (\n           \n            <div>\n               <Laye  stype={stype}>\n                   \n               </Laye>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\n// import Laye from \"@/components/laye\"\nimport { Layout, Row, Col, Input } from \"antd\";\nimport \"./class.css\"\nimport { AudioOutlined } from '@ant-design/icons';\nimport \"antd/dist/antd.css\"\nimport { Select, Button,Pagination,Table, Tag, Space} from 'antd';\nimport { _student,_del_student,_class,_subject, _grade} from \"@/api/manger\"\n\ninterface IObject{\n    [keys:string]:any\n}\n\nconst { Option } = Select;\nconst { Column, ColumnGroup } = Table;\n\nconst { Content, } = Layout;\n\nconst { Search } = Input;\nconst columns = [\n    {\n      title: 'student_name',\n      dataIndex: 'student_name',\n    },\n    {\n      title: 'student_id',\n      dataIndex: 'student_id',\n    },\n    {\n      title: 'grade_name',\n      dataIndex: 'grade_name',\n    },\n    {\n        title: 'room_text',\n        dataIndex: 'room_text',\n      },\n      {\n        title: 'student_pwd',\n        dataIndex: 'student_pwd',\n      },\n      {\n        title: '操作',\n        dataIndex: 'subject_text',\n      },\n  ];\n  let list1={\n      a:'',\n      b:'',\n      c:''\n  };\n  \n  let data: any[] | undefined = [\n  ];\n  \n \n  \n\nconst suffix = (\n    <AudioOutlined\n        style={{\n            fontSize: 16,\n            color: '#1890ff',\n        }}\n    />\n);\ninterface Iprops{\n    history:any\n\n}\ninterface Istate{\n    list:any,\n    current:number,\n    StartEnd:number,\n    end:number,\n    newList:any[],\n    list1:any,\n    room:any,\n    grade:any\n}\n// const onSearch = (value: any) => {\n//     console.log(12)\n// }\n\nexport default class Student extends Component<Iprops,Istate>{\n    handleChange(value: any) {\n        list1.b=value;\n        // console.log(`selected ${value}`);\n    }\n    handleChangec(value: any) {\n        list1.c=value;\n\n        // console.log(`selected ${value}`);\n    }\n\n     \n    state={\n        list:[],\n        current:1,\n        StartEnd:0,\n        end:9,\n        newList:[],\n        list1:\"\",\n        room:[],\n        grade:[]\n\n    }\n    \n\n\n    componentDidMount(){\n        this.student()\n        this.class()\n        this.grade()\n    }\n    change(e:any){\n       list1.a=e.target.value\n    }\n\n    // async subject(){\n    //     let res= await _subject();\n\n        \n    //     console.log(res.data.data)\n    // }\n     //获取班级接口\n     async grade(){\n        let res =   await _grade()\n        this.setState({\n            grade:res.data.data\n        })\n        console.log(res.data)\n      }\n  \n      //获取教室接口\n      async class(){\n          let res = await _class()\n          this.setState(\n              {\n                  room:res.data.data\n              }\n          )\n          console.log(res.data)\n      }\n\n\n    async student(){\n        let res = await _student()\n        \n        res.data.data?.forEach((item:any)=>{\n            item.subject_text=\"删除\"\n        })\n        // console.log(rcc)\n        data = res.data.data\n        this.setState({\n            list:res.data.data,\n        })\n\n        // console.log(thi.state.list)\n    }\n    async del(student_id:string){\n        \n        await _del_student(student_id)\n       this.props.history.go(0)\n    }\n    // onChange = (page: any) => { \n    //     console.log(page)\n    //     let redat =this.state.list.slice((page-1)*this.state.end,10*page)\n    //     this.setState({\n    //       current: page,\n    //       newList:redat\n    //     });\n    //     console.log(this.state.newList)\n       \n    //   };\n    dsad=()=>{\n        console.log(this.props.history.go(0))\n    }\n    red = () =>{\n        this.student()\n        console.log(this.state.list)\n        let arr = []\n        arr = this.state.list.filter((item:any) => {\n            // return list1.a.length ? item.student_name.includes(list1.a) : '' ||\n            // list1.b.length ? item.room_text.includes(list1.b) : '' ||\n            // list1.c.length ? item.grade_name.includes(list1.c) : ''\n            if(list1.a !== ''){\n               return item.student_name.includes(list1.a)\n            } \n            if(list1.b !== ''){\n                return item.room_text.includes(list1.b)\n            } \n            if(list1.c !== ''){\n                return item.grade_name.includes(list1.c)\n            }\n            // return item.student_name.includes(list1.a)\n        })\n        this.setState({\n            list : arr\n        })\n        setTimeout(() => {\n            console.log(this.state.list);\n        })\n        // if(list1.a.length && list1.b.length && list1.c.length){\n        //     \n        // }\n\n\n        // for(let k in (list1 as IObject)){\n        //     if(list1[k])\n        // }\n        console.log(list1);\n    \n    }\n    render() {\n        // const stype=\"+ 添加课程\"\n        return (\n            <div>\n                <Layout>\n\n                    <Content style={{ margin: \"24px 16px 0\" }}>\n\n                        <div className=\"abc\" style={{ padding: 24, background: \"#fff\", overflowY: \"scroll\" }}>\n  \n                                <Row>\n                                    <Col span={6}><Input  onChange={this.change}></Input></Col>\n                                    <Col span={5}>\n                                        \n                                        <Select defaultValue=\"lucy\" style={{ width: 120 }} onChange={ this.handleChange }>\n                                        {\n                                            this.state.room.map((item:any)=>{\n                                            return  <Option value={item.room_text} >{item.room_text}</Option>\n                                            })\n                                        }\n                                        \n                                       \n                                    </Select></Col>\n                                    <Col span={5}><Select defaultValue=\"lucy\" style={{ width: 120 }} onChange={ this.handleChangec }>\n                                    {\n                                            this.state.grade.map((item:any)=>{\n                                            return  <Option value={item.grade_name} >{item.grade_name}</Option>\n                                            })\n                                    }\n                                        {/* <Option value=\"Yiminghe\">yiminghe</Option> */}\n                                    </Select></Col>\n                                    <Col span={5}> <Button type=\"primary\" onClick={this.red}>搜索</Button></Col>\n                                    <Col span={3}><Button type=\"primary\" onClick={this.dsad}>重置</Button> </Col>\n                                </Row>\n                                <Table columns={columns} dataSource={data} size=\"middle\"  onRow={record => {\n                                return {\n                                    onClick: event => {\n                                    let tar = event.target\n                                       if((tar as any).innerHTML=\"删除\"){\n                                        // console.log(record)\n                                        this.del(record.student_id)\n                                    }\n                                    }, // 点击行\n                                };\n                            }} />\n                                <div>\n                                </div>\n                                \n                            <div>\n                            \n                            </div>\n                           \n                            \n                </div>\n                    </Content>\n\n                </Layout>\n            </div>\n        )\n    }\n}\n","import request from '../utils/request'\n\nexport function _getGrade(){\n    return request.get('/api/manger/grade')\n}\n\nexport function _getExamList(grade_id:string){\n    return request.get('/api/exam/student',{params:{grade_id}})\n}\n\nexport function _getStudentExamDetail(exam_student_id:string|number){\n    return request.get(`/api/exam/student/${exam_student_id}`)\n}\n\nexport function _editStudentExam(id:string,score:string|number){\n    return request.put(`/api/exam/student/${id}`,{id,score})\n}","import React, { Component } from \"react\";\nimport { _getGrade } from \"../../api/waitclass\";\nimport { Table, Space } from \"antd\";\ninterface IProps {\n  [key: string]: any;\n}\ninterface IState {\n  list: any[];\n  columns: any;\n}\nclass Waitclass extends Component<IProps, IState> {\n  constructor(props: IProps) {\n    super(props);\n    this.state = {\n      list: [],\n      columns: [\n        {\n          title: \"班级名\",\n          dataIndex: \"grade_name\",\n          key: \"1\",\n        },\n        {\n          title: \"课程名称\",\n          dataIndex: \"subject_text\",\n          key: \"2\",\n        },\n        {\n          title: \"阅卷状态\",\n          dataIndex: \"address\",\n          key: \"3\",\n        },\n        {\n          title: \"课程名称\",\n          dataIndex: \"subject_text\",\n          key: \"4\",\n        },\n        {\n          title: \"成材率\",\n          dataIndex: \"room_text\",\n          key: \"5\",\n        },\n        {\n          title: \"操作\",\n          key: \"\",\n          render: (text: any, record: any) => (\n            <Space size=\"middle\">\n              <span\n                onClick={() => {\n                  this.toClassMate(record);\n                }}\n              >\n                批卷\n              </span>\n            </Space>\n          ),\n        },\n      ],\n    };\n  }\n  render() {\n    return (\n      <div className=\"waitclass\">\n        <Table columns={this.state.columns} dataSource={this.state.list} rowKey=\"grade_id\" />,\n      </div>\n    );\n  }\n  async componentDidMount() {\n    this.getGrade();\n  }\n  async getGrade() {\n    const result = await _getGrade();\n    this.setState({\n      list: result.data.data,\n    });\n  }\n  toClassMate(record: any) {\n    this.props.history.push({\n      pathname: \"/home/waitclassmate\",\n    });\n    localStorage.setItem(\"grade_id\", record.grade_id);\n    localStorage.setItem(\"grade_name\", record.grade_name);\n  }\n}\nexport default Waitclass;\n","import React, { Component } from \"react\";\nimport { _getExamList } from \"@/api/waitclass.ts\";\nimport { Table, Space } from \"antd\";\ninterface IProps {\n  [key: string]: any;\n}\ninterface IState {\n  list: any;\n  columns: any;\n  gradeList: any;\n}\nclass Waitclassmate extends Component<IProps, IState> {\n  constructor(props: IProps) {\n    super(props);\n    this.state = {\n      list: [],\n      gradeList: [],\n      columns: [\n        {\n          title: \"班级\",\n          dataIndex: \"grade_name\",\n          key: \"1\",\n        },\n        {\n          title: \"姓名\",\n          dataIndex: \"student_name\",\n          key: \"2\",\n        },\n        {\n          title: \"阅卷状态\",\n          dataIndex: \"status\",\n          key: \"3\",\n        },\n        {\n          title: \"开始时间\",\n          dataIndex: \"start_time\",\n          key: \"4\",\n        },\n        {\n          title: \"结束时间\",\n          dataIndex: \"end_time\",\n          key: \"5\",\n        },\n        {\n          title: \"成材率\",\n          dataIndex: \"room_text\",\n          key: \"6\",\n        },\n        {\n          title: \"操作\",\n          key: \"\",\n          render: (text: any, record: any) => (\n            <Space size=\"middle\">\n              <span\n                onClick={() => {\n                  this.toStudentExamDetail(record);\n                }}\n              >\n                批卷\n              </span>\n            </Space>\n          ),\n        },\n      ],\n    };\n  }\n  render() {\n    return (\n      <div>\n        <Table columns={this.state.columns} dataSource={this.state.list} rowKey=\"exam_student_id\" />,\n      </div>\n    );\n  }\n  componentDidMount() {\n    this.getExamList();\n  }\n  async getExamList() {\n    const result = await _getExamList(localStorage.getItem(\"grade_id\") as string);\n    result.data.exam.forEach((item: any) => {\n      item.grade_name = localStorage.getItem(\"grade_name\") as string;\n      item.status = item.status ? \"已阅\" : \"未阅\";\n    });\n    this.setState({\n      list: result.data.exam,\n    });\n  }\n  toStudentExamDetail(record: any) {\n    this.props.history.push(`/home/studentexamdetail/${record.exam_student_id}`);\n    localStorage.setItem(\"exam_student_id\", record.exam_student_id);\n  }\n}\n\nexport default Waitclassmate;\n","import React, { Component } from 'react';\nimport {_getStudentExamDetail,_editStudentExam} from '@/api/waitclass'\nimport Markdown from 'react-markdown'\nimport { Divider,Button ,Row, Col,Slider,Modal} from 'antd';\ninterface IProps{\n    [key:string]:any\n}\ninterface IState{\n    detailData:any,\n    inputValue:number,\n    visible:boolean,\n    flag:boolean\n}\nclass StudentExamDetail extends Component<IProps,IState> {\n    constructor(props:IProps){\n        super(props)\n        this.state = {\n            detailData:{},\n            inputValue: 1,\n            visible: false,\n            flag:false\n\n        }\n    }\n    render() {\n        console.log(this.state.detailData)\n        const {detailData} = this.state\n        return (\n            <div>\n                <p style={{margin:\"10px 0 10px 20px\",fontSize:\"30px\"}}>阅卷</p>\n                <div className=\"studentExamDetailMenu\" >\n                    {\n                        detailData.questions && detailData.questions.map((item:any,index:number) => {\n                            return <div className=\"studentExamDetailItem\" key={item.questions_id} >\n                                <div>{index+1}、{item.title}<span>{item.questions_type_text}</span></div>\n                                <div><Markdown source={item.questions_stem}/></div>\n                                <div className=\"studentExamDetailItemAnswer\" >\n                                    <div className=\"studentExamDetailItemAnswerLeft\" >\n                                         <Divider plain>学生答案</Divider>\n                                         <div>\n                                             {item.student_answer}\n                                         </div>\n                                    </div>\n                                    <div className=\"studentExamDetailItemAnswerRight\" >\n                                         <Divider plain>标准答案</Divider>\n                                         <div>\n                                             <Markdown source={item.questions_answer}/>  \n                                         </div>\n                                    </div>\n                                </div>\n                            </div>\n                        })\n                    }\n                </div>\n                <div className=\"studentExamDetailMark\">\n                    <p>{detailData.student_name}</p>\n                    <p>得分：{this.state.inputValue}</p>\n                    <div>\n                    <Row>\n                        <Col span={12}>\n                        <Slider\n                            min={0}\n                            max={100}\n                            onChange={this.onChange}\n                            value={typeof this.state.inputValue === 'number' ? this.state.inputValue : 0}\n                        />\n                        </Col>\n                    </Row>\n                    </div>\n                    <p><Button type=\"primary\" onClick={this.showModel}>确定</Button></p>\n                </div>\n                <Modal\n                title=\"确定提交分数吗\"\n                visible={this.state.visible}\n                onOk={this.handleOk}\n                onCancel={this.handleCancel}\n                >\n                <p>分数是{this.state.inputValue}</p>\n                </Modal>\n                <Modal\n                title=\"批卷结果\"\n                visible={this.state.flag}\n                onOk={this.Ok}\n                onCancel={this.Cancel}\n                >\n                <p>批改试卷成功 {detailData.student_name}得分{this.state.inputValue}</p>\n                </Modal>\n            </div>\n            \n        );\n    }\n    componentDidMount(){\n        this.getStudentExamDetail(localStorage.getItem('exam_student_id') as string)\n    }\n    async getStudentExamDetail(exam_student_id:string|number){\n        const result = await _getStudentExamDetail(exam_student_id)\n        this.setState({\n            detailData:result.data.data\n        })\n    }\n    onChange = ( value:any ) => {\n        this.setState({\n            inputValue: value,\n        });\n    }\n    handleOk = (e:any) => {\n        this.setState({\n            visible: false,\n            flag:true\n        });\n    };\n\n    handleCancel = (e:any) => {\n        this.setState({\n            visible: false,\n        });\n    };\n    showModel = () => {\n        this.setState({\n            visible: true,\n        });\n    }\n    Ok = (e:any) => {\n        this.setState({\n            flag: false,\n        });\n        _editStudentExam(localStorage.getItem('exam_student_id') as string,this.state.inputValue)\n        this.props.history.push('/home/waitclassmate')\n    };\n\n    Cancel = (e:any) => {\n        this.setState({\n            flag: false,\n        });\n    };\n}\n\nexport default StudentExamDetail;","import React, { Component } from 'react'\r\nimport echarts from 'echarts'\r\nimport \"@/assets/css/echarts.scss\"\r\n\r\nexport default class Echarts extends Component {\r\n    state = {\r\n        edata: {\r\n            title: {\r\n                text: '1801B第三小组'\r\n            },\r\n            tooltip: {},\r\n            xAxis: {\r\n                data: ['刘涵', '杨坤朋', '高泽康', '南佳佳', '耿文彦', '刘冠宗']\r\n            },\r\n            yAxis: {},\r\n            series: [{\r\n                name: '成绩',\r\n                type: 'bar',\r\n                color: 'hotpink',\r\n                data: [100, 80, 78, 65, 90, 40]\r\n            }]\r\n        }\r\n    }\r\n    e18!: HTMLDivElement | null\r\n    render() {\r\n        return (\r\n            <div className=\"echartsa\">\r\n                <div className=\"e18\" ref={el => this.e18 = el}>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    componentDidMount () {\r\n        const myChart = echarts.init((this.e18 as HTMLDivElement));\r\n        myChart.setOption (this.state.edata)\r\n    }\r\n}\r\n","import React, { Component } from 'react'\nimport { Table } from 'antd';\nimport {apioauth} from '@/api/user'\n\nexport default class Apioth extends Component {\n    state = {\n        columns: [\n            {\n                title: 'api权限名称',\n                dataIndex: 'api_authority_text',\n                key: 'api_authority_id',\n            },\n            {\n                title: 'api权限url',\n                dataIndex: 'api_authority_url',\n                key: 'api_authority_id',\n            },\n            {\n                title: 'api权限方法',\n                dataIndex: 'api_authority_method',\n                key: 'api_authority_id',\n            },\n        ],\n        userIndentityData: []\n    }\n    render() {\n        return (\n            <div>\n               <Table columns={this.state.columns} dataSource={this.state.userIndentityData} rowKey=\"api_authority_id\"/>\n            </div>\n        )\n    }\n    componentDidMount () {\n        this.getUserIndentity();\n        \n    }\n    async getUserIndentity () {\n        const res = await apioauth ();\n        console.log(res);\n        this.setState ({\n            userIndentityData: res.data.data\n        })\n    }\n}\n","import React, { Component } from 'react'\nimport { Table } from 'antd';\nimport {userIdentity} from '@/api/user'\n\nexport default class Iddata extends Component {\n    state = {\n        columns: [\n            {\n                title: '身份名称',\n                dataIndex: 'identity_text',\n                key: 'identity_text',\n            },\n        ],\n        userIndentityData: []\n    }\n    render() {\n        return (\n            <div>\n               <Table columns={this.state.columns} dataSource={this.state.userIndentityData} rowKey=\"identity_id\"/>\n            </div>\n        )\n    }\n    componentDidMount () {\n        this.getUserIndentity();\n        \n    }\n    async getUserIndentity () {\n        const res = await userIdentity ();\n        this.setState ({\n            userIndentityData: res.data.data\n        })\n    }\n}\n","import React, { Component } from 'react'\nimport { Table } from 'antd';\nimport {idnapi} from '@/api/user'\n\nexport default class Idnapi extends Component {\n    state = {\n        columns: [\n            {\n                title: '身份名称',\n                dataIndex: 'identity_text',\n                key: 'api_authority_id',\n            },\n            {\n                title: 'api权限名称',\n                dataIndex: 'api_authority_text',\n                key: 'api_authority_id',\n            },\n            {\n                title: 'api权限url',\n                dataIndex: 'api_authority_url',\n                key: 'api_authority_id',\n            },\n            {\n                title: 'api权限方法',\n                dataIndex: 'api_authority_method',\n                key: 'api_authority_id',\n            },\n        ],\n        userIndentityData: []\n    }\n    render() {\n        return (\n            <div>\n               <Table columns={this.state.columns} dataSource={this.state.userIndentityData} rowKey=\"identity_api_authority_relation_id\"/>\n            </div>\n        )\n    }\n    componentDidMount () {\n        this.getUserIndentity();\n        \n    }\n    async getUserIndentity () {\n        const res = await idnapi ();\n        console.log(res);\n        this.setState ({\n            userIndentityData: res.data.data\n        })\n    }\n}\n","import React, { Component } from 'react'\nimport { Table } from 'antd';\nimport {idnoth} from '@/api/user'\n\nexport default class Idnoth extends Component {\n    state = {\n        columns: [\n            {\n                title: '身份',\n                dataIndex: 'identity_text',\n                key: 'identity_view_authority_relation_id',\n            },\n            {\n                title: '视图权限名称',\n                dataIndex: 'view_authority_text',\n                key: 'identity_view_authority_relation_id',\n            },\n            {\n                title: '视图id',\n                dataIndex: 'view_id',\n                key: 'identity_view_authority_relation_id',\n            },\n        ],\n        userIndentityData: []\n    }\n    render() {\n        return (\n            <div>\n               <Table columns={this.state.columns} dataSource={this.state.userIndentityData} rowKey=\"identity_view_authority_relation_id\"/>\n            </div>\n        )\n    }\n    componentDidMount () {\n        this.getUserIndentity();\n        \n    }\n    async getUserIndentity () {\n        const res = await idnoth ();\n        console.log(res);\n        this.setState ({\n            userIndentityData: res.data.data\n        })\n    }\n}\n","import React, { Component } from 'react'\nimport {observer,inject} from 'mobx-react'\nimport { Table } from 'antd';\n\ninterface Iprops {\n    user: any,\n    userData: Array<any>\n}\n\n@inject('user')\n@observer\nexport default class Userdata extends Component<Iprops> {\n    state = {\n        columns: [\n            {\n                title: '用户名',\n                dataIndex: 'user_name',\n                key: 'user_name',\n            },\n            {\n                title: '密码',\n                dataIndex: 'user_pwd',\n                key: 'user_pwd',\n            },\n            {\n                title: '身份',\n                dataIndex: 'identity_text',\n                key: 'identity_text',\n            }\n        ],\n    }\n    render() {\n        const {userData} = this.props.user;\n        return (\n            <div className=\"userdata\">\n                <Table columns={this.state.columns} dataSource={userData} rowKey=\"user_id\"/>\n            </div>\n        )\n    }\n    componentDidMount () {\n        const {getUserData} = this.props.user;\n        getUserData ();\n    }\n}\n","import React, { Component } from 'react'\nimport { Table } from 'antd';\nimport {viewoth} from '@/api/user'\n\nexport default class Viewoth extends Component {\n    state = {\n        columns: [\n            {\n                title: '视图权限名称',\n                dataIndex: 'view_authority_text',\n                key: 'view_authority_id',\n            },\n            {\n                title: '视图id',\n                dataIndex: 'view_id',\n                key: 'view_authority_id',\n            },\n        ],\n        userIndentityData: []\n    }\n    render() {\n        return (\n            <div>\n               <Table columns={this.state.columns} dataSource={this.state.userIndentityData} rowKey=\"view_authority_id\"/>\n            </div>\n        )\n    }\n    componentDidMount () {\n        this.getUserIndentity();\n        \n    }\n    async getUserIndentity () {\n        const res = await viewoth ();\n        console.log(res);\n        this.setState ({\n            userIndentityData: res.data.data\n        })\n    }\n}\n","import React, { Component } from 'react'\ninterface Iprops {\n    location: any\n}\ninterface IArray {\n    exam_id: string\n    exam_name: string\n    json_path: string\n    questions_answer: string\n    questions_id: string\n    questions_stem: string\n    questions_type_id: string\n    questions_type_text: string\n    subject_id: string\n    subject_text: string\n    title: string\n    user_id: string\n    user_name: string\n}\ninterface Istate {\n    location: any\n    data: Array<IArray>\n}\nexport default class xaingssq extends Component<Iprops, Istate> {\n    state = {\n        data: [],\n        location: []\n    }\n    componentDidMount() {\n        this.listdata()\n    }\n    listdata() {\n        this.setState({\n            data: this.props.location.state.obj\n        })\n    }\n    render() {\n            const { //exam_id,\n                exam_name,\n                //json_path,\n                questions_answer,\n                //questions_id,\n                questions_stem,\n                //questions_type_id,\n                questions_type_text,\n                //subject_id,\n                subject_text,\n                title,\n                //user_id,\n                user_name,} =this.props.location.state.obj[0]\n        console.log(this.props.location.state.obj)\n        return (\n            <div className=\"xaingssq\">\n                 <div className=\"xaingssq2\">\n                            <div className=\"left\">\n                    <p>出题人：{user_name}</p>\n                                <p>题目信息</p>\n                                <p>\n                                    <span className=\"exam_name\">{exam_name} </span>\n                                    <span className=\"questions_type_text\">{questions_type_text}</span>\n                                    <span className=\"subject_text\">{subject_text}</span>\n                                </p>\n                    <p>{title}</p>\n                                <p>{questions_stem}\n                               </p>\n                                <p>实列1：</p>\n                                <dl>\n                                    <dt>输入: \"UD\"</dt>\n                                    <dt>输出: \"true\"</dt>\n                                    <dt>解释: \"机器人向上移动一次，然后向下移动一次。\n                                        所有动作都具有相同的幅度，因此它最终回到\n                                        它开始的原点。因此，我们返回 true。\"</dt>\n                                </dl>\n                                <p>实列2：\n                               <dl>\n                                        <dt>输入: \"LL\"</dt>\n                                        <dt>输出: \"false\"</dt>\n                                        <dt>解释: \"机器人向左移动两次。它最终位于原点的左侧，\n                                            距原点有两次 “移动” 的距离。我们返回 \n                                            false，因为它在移动结束时没有返回原点。\"</dt>\n                                    </dl>\n                                </p>\n                                <p>\n                                    注意：机器人“面朝”的方向无关紧要。\n                                    “R” 将始终使机器人向右移动一次，“L” 将始终向左移动等。\n                                    此外，假设每次移动机器人的移动幅度相同。\n                               </p>\n                                <p>请根据题意在横线处填写合适的代码：</p>\n                                <p>{questions_answer} </p>\n                            </div>\n                            <div className=\"right\">\n                                <p>答案信息</p>\n                                <p>{questions_answer} </p>\n                            </div>\n                        </div>\n            </div>\n\n        )\n    }\n}\n\n","/*\n * @Descripttion :\n * @Autor        : 高泽康\n * @Date         : 2020-10-20 10:37:13\n * @LastEditTime : 2020-10-22 16:59:03\n * @FilePath     : \\src\\view\\home\\usershow\\Teslookbian.tsx\n */\n\nimport React, { Component } from \"react\";\nimport { _room, _grade, _zhou, _xiugai } from \"../../../api/apiss\";\n//映入wangeditor 插件\nimport E from \"wangeditor\";\ninterface zhouDatas {\n  questions_type_id: string;\n  questions_type_text: string;\n  questions_type_sort: number;\n}\ninterface tiDataS {\n  exam_id: string;\n  exam_name: string;\n}\ninterface xiuDataS {\n  subject_text: string;\n  subject_id: string;\n  index: number;\n}\ninterface State {\n  list: Array<any>;\n  tg: string;\n  zhouData: Array<zhouDatas>;\n  tiData: Array<tiDataS>;\n  xiuData: Array<xiuDataS>;\n  location: any;\n  questions_id: string;\n}\n\nlet editor: E | null = null;\n//声明他一下\nlet editor1: E | null = null;\nexport default class Testques extends Component<any, State> {\n  state = {\n    list: [],\n    location: [],\n    tg: \"\",\n    zhouData: [],\n    tiData: [],\n    xiuData: [],\n    questions_id: \"\",\n  };\n  xiala1 = \"\";\n  xiala2 = \"\";\n  xiala3 = \"\";\n  componentDidMount() {\n    //在挂载前找到他\n    editor = new E(\"#box1\");\n    //然后实列他\n    editor1 = new E(\"#box2\");\n    //创作一个对象\n    editor.create();\n    editor1.create();\n    this.getList();\n    this.zhouList();\n    this.leiList();\n    console.log(this.props.location.state.obj);\n    this.setState({\n      tg: this.props.location.state.obj[0].title,\n    });\n    this.setState({\n      questions_id: this.props.location.state.obj[0].questions_id,\n    });\n  }\n  async getList() {\n    let res = await _zhou();\n    //周考\n    console.log(res.data.data);\n    this.setState({\n      zhouData: res.data.data,\n    });\n  }\n  async zhouList() {\n    let res = await _grade();\n    //题型\n    console.log(res.data.data);\n    this.setState({\n      tiData: res.data.data,\n    });\n  }\n  async leiList() {\n    let res = await _room();\n    //课程\n    console.log(res.data.data);\n    this.setState({\n      xiuData: res.data.data,\n    });\n  }\n  inputChange(e: InputEvent) {\n    let el = (e.target as any).value;\n    this.setState({\n      tg: el,\n    });\n  }\n  async getInputValue() {\n    let title = this.state.tg;\n    let exam_id = (this.xiala1 as any).value;\n    let subject_id = (this.xiala2 as any).value;\n    let questions_type_id = (this.xiala3 as any).value;\n    let questions_id = this.state.questions_id;\n    //获取他的文本节点\n    let questions_answer = (editor as E).txt.text();\n    let questions_stem = (editor1 as E).txt.text();\n    let res = await _xiugai({\n      title,\n      exam_id,\n      subject_id,\n      questions_type_id,\n      questions_answer,\n      questions_id,\n      questions_stem,\n    });\n    console.log(res);\n    alert(res.data.msg);\n  }\n  render() {\n    return (\n      <div className=\"Testadd\">\n        <p>题目信息</p>\n        <p>题干</p>\n        <p>\n          {\" \"}\n          <input value={this.state.tg} onChange={(e) => this.inputChange(e as any)}></input>{\" \"}\n        </p>\n\n        <p>题目主题</p>\n        <div id=\"box1\"></div>\n        <p>\n          请选择考试类型：{\" \"}\n          <select\n            className=\"xiala1\"\n            ref={(el) => {\n              (this.xiala1 as any) = el;\n            }}\n          >\n            {this.state.zhouData.map((item: tiDataS, index: number) => {\n              return (\n                <option value={item.exam_id} key={index}>\n                  {item.exam_name}\n                </option>\n              );\n            })}\n          </select>\n        </p>\n        <p>\n          {\" \"}\n          请选择课程类型：{\" \"}\n          <select\n            className=\"xiala2\"\n            ref={(el) => {\n              (this.xiala2 as any) = el;\n            }}\n          >\n            {this.state.xiuData.map((item: xiuDataS, index: number) => {\n              return (\n                <option value={item.subject_id} key={index}>\n                  {item.subject_text}\n                </option>\n              );\n            })}\n          </select>\n        </p>\n        <p>\n          {\" \"}\n          请选择题目类型：{\" \"}\n          <select\n            className=\"xiala3\"\n            ref={(el) => {\n              (this.xiala3 as any) = el;\n            }}\n          >\n            {this.state.tiData.map((item: zhouDatas, index: number) => {\n              return (\n                <option value={item.questions_type_id} key={index}>\n                  {item.questions_type_text}\n                </option>\n              );\n            })}\n          </select>\n        </p>\n        <div id=\"box2\"></div>\n        <p>\n          <button onClick={() => this.getInputValue()}>提交</button>\n        </p>\n      </div>\n    );\n  }\n}\n","/*\n * @Description:\n * @Author: 刘涵\n * @Date: 2020-10-19 10:37:01\n * @LastEditors: 刘涵\n * @LastEditTime: 2020-10-22 18:37:00\n * @FilePath: \\counterplan\\src\\router\\config.ts\n */\nimport Home from \"@/view/Home\";\nimport Detail from \"@/view/Detail\";\nimport Login from \"@/view/Login\";\n\n// 引入2级路由\nimport Testadd from \"@/view/home/Testadd\";\nimport Testlist from \"@/view/home/Testlist\";\nimport Testlook from \"@/view/home/Testlook\";\n\nimport Useradd from \"@/view/home/Useradd\";\nimport Usershow from \"@/view/home/Usershow\";\n\n\nimport Examadd from '@/view/home/Examadd'\nimport Examlist from '@/view/home/Examlist'\n//新建试卷\nimport ExamNew from '@/view/home/ExamNew'\n// 试卷详情\nimport ExamDetail from '@/view/home/ExamDetail'\n\nimport Class from \"@/view/home/Class\";\nimport Classroom from \"@/view/home/Classroom\";\nimport Student from \"@/view/home/Student\";\n\n\n\nimport Waitclass from '@/view/home/Waitclass'\nimport Waitclassmate from '@/view/home/Waitclassmate'\nimport StudentExamDetail from '@/view/home/StudentExamDetail'\n\nimport Echarts from \"@/view/home/Echarts\"\n\n// 引入3级路由\nimport Apioth from \"@/view/home/usershow/Apioth\";\nimport Iddata from \"@/view/home/usershow/Iddata\";\nimport Idnapi from \"@/view/home/usershow/Idnapi\";\nimport Idnoth from \"@/view/home/usershow/Idnoth\";\nimport Userdata from \"@/view/home/usershow/Userdata\";\nimport Viewoth from \"@/view/home/usershow/Viewoth\";\nimport xaingssq from \"@/view/home/usershow/xaingssq\";\nimport Teslookbian from \"@/view/home/usershow/Teslookbian\"\nconst router = [\n  {\n    path: \"/\",\n    redirect: \"/login\",\n  },\n  {\n    path: \"/home\",\n    name: \"Home\",\n    component: Home,\n    children: [\n      {\n        path: \"/home/usershow/xaingssq\",\n        name: \"xaingssq\",\n        component: xaingssq\n      },\n      {\n        path: \"/home/usershow/Teslookbian\",\n        name: \"Teslookbian\",\n        component:Teslookbian\n      },\n      {\n        path: \"/home/testadd\",\n        name: \"Testques\",\n        component: Testadd,\n      },\n      {\n        path: \"/home/testlist\",\n        name: \"Testlist\",\n        component: Testlist,\n      },\n      {\n        path: \"/home/testlook\",\n        name: \"Testlook\",\n        component: Testlook,\n      },\n      {\n        path: \"/home/useradd\",\n        name: \"Useradd\",\n        component: Useradd,\n      },\n      {\n        path: \"/home/usershow\",\n        name: \"Usershow\",\n        component: Usershow,\n        children: [\n          {\n            path: \"/home/usershow/userdata\",\n            name: \"Userdata\",\n            component: Userdata,\n          },\n          {\n            path: \"/home/usershow/iddata\",\n            name: \"Iddata\",\n            component: Iddata,\n          },\n          {\n            path: \"/home/usershow/apioth\",\n            name: \"Apioth\",\n            component: Apioth,\n          },\n          {\n            path: \"/home/usershow/idnapi\",\n            name: \"Idnapi\",\n            component: Idnapi,\n          },\n          {\n            path: \"/home/usershow/viewoth\",\n            name: \"Viewoth\",\n            component: Viewoth,\n          },\n          {\n            path: \"/home/usershow/idnoth\",\n            name: \"Idnoth\",\n            component: Idnoth,\n          },\n        ],\n      },\n      {\n        path: \"/home/examadd\",\n        name: \"Examadd\",\n        component: Examadd,\n      },\n      {\n        path: \"/home/examlist\",\n        name: \"Examlist\",\n        component: Examlist,\n      },\n      {\n        path: \"/home/examlist\",\n        name: \"Examlist\",\n        component: Examlist,\n      },\n      {\n        path: \"/home/class\",\n        name: \"Class\",\n        component: Class,\n      },\n      {\n        path: \"/home/classroom\",\n        name: \"Classroom\",\n        component: Classroom,\n      },\n      {\n        path: \"/home/student\",\n        name: \"Student\",\n        component: Student,\n      },\n      {\n        path: \"/home/waitclass\",\n        name: \"Waitclass\",\n        component: Waitclass,\n      },\n      {\n        path: '/home/examDetail',\n        name: 'ExamDetail',\n        component: ExamDetail\n    },\n    {\n      path: '/home/examNew',\n      name: 'ExamNew',\n      component: ExamNew\n    },\n    {\n      path: '/home/echarts',\n      name: 'Echarts',\n      component: Echarts\n    },\n  {\n    path: '/home/waitclassmate',\n    name: 'Waitclassmate',\n    component: Waitclassmate\n},\n{\n    path:'/home/studentexamdetail/:id',\n    name:'StudentExamDetail',\n    component: StudentExamDetail\n}\n    ],\n  },\n  {\n    path: \"/detail\",\n    name: \"Detail\",\n    component: Detail,\n  },\n  {\n    path: \"/login\",\n    name: \"Login\",\n    component: Login,\n  },\n];\n\nexport default router;\n","// @ts-nocheck\nimport React from 'react';\nimport RouterView from './router/RouterView';\nimport router from './router/config'\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <RouterView routes={router}/>\n    </div>\n  );\n}\n\nexport default App;\n","/*\n * @Description: \n * @Author: 刘涵\n * @Date: 2020-10-12 11:25:41\n * @LastEditors: 刘涵\n * @LastEditTime: 2020-10-20 18:47:41\n * @FilePath: \\react-mobx-ts\\src\\store\\index.js\n */\nconst context = require.context('./model', false, /\\.js|\\.ts$/);\n\nconst getModel = context.keys().map(key => context(key));\n\nconst Store = {};\n\ngetModel.forEach(model => {\n    Store[model.default.namespace] = model.default;\n});\n\nexport default Store;\n","/*\n * @Descripttion : \n * @Autor        : 高泽康\n * @Date         : 2020-10-20 10:37:13\n * @LastEditTime: 2020-10-21 19:23:12\n * @FilePath: \\counterplan\\src\\index.js\n */\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport 'antd/dist/antd.css';\nimport \"@/assets/css/gzk.scss\";\nimport App from \"@/App.tsx\";\nimport { Provider } from \"mobx-react\";\nimport store from \"@/store\";\n\nimport \"@/assets/css/login.scss\";\nimport \"@/assets/css/userAdd.scss\";\nimport \"@/assets/css/index.scss\";\n\nReactDOM.render(\n  <Provider {...store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n","/*\n * @Description:\n * @Author: 刘涵\n * @Date: 2020-09-14 20:00:12\n * @LastEditors: 刘涵\n * @LastEditTime: 2020-10-23 09:00:56\n * @FilePath: \\counterplan\\src\\utils\\request.js\n */\nimport axios from \"axios\";\n\nconst request = axios.create({\n  timeout: 5000,\n});\n\n//拦截请求\nrequest.interceptors.request.use(config => {\n    // localStorage.getItem('token')\n    const token = sessionStorage.getItem('token');\n    config.headers.authorization = token;\n    return config;\n})\n\n//拦截响应\nrequest.interceptors.response.use(\n  (response) => {\n    if (response.data.code === 403 || response.data.code === 401) {\n      window.location.href = \"/login\";\n    }\n    return response;\n  },\n  (err) => {\n    return Promise.reject(err);\n  }\n);\n\nexport default request;\n","/*\n * @Description: \n * @Author: 刘涵\n * @Date: 2020-10-21 14:44:40\n * @LastEditors: 刘涵\n * @LastEditTime: 2020-10-21 20:58:58\n * @FilePath: \\counterplan\\src\\api\\user.ts\n */\nimport request from \"@/utils/request\";\nimport { User, UpUser, IdentityEdit, AuthorityApiEdit, OnsetIdentityApi, OnsetIdentityView, AuthorityApiView, UserViewListId } from \"@/interface\";\n\ninterface Login {\n  username: string;\n  password: string;\n}\n\n// 根据用户id，返回用户视图\nexport function userViewList(user_id: UserViewListId) {\n  const url = \"/api/user/new\";\n  return request.get(url, { params: { user_id } });\n}\n\nexport function userData() {\n  const url = \"/api/user/user\";\n  return request.get(url);\n}\n\nexport function userIdentity() {\n  const url = \"/api/user/identity\";\n  return request.get(url);\n}\n\nexport function apioauth() {\n  const url = \"/api/user/api_authority\";\n  return request.get(url);\n}\n\nexport function idnapi() {\n  const url = \"/api/user/identity_api_authority_relation\";\n  return request.get(url);\n}\n\nexport function viewoth() {\n  const url = \"/api/user/view_authority\";\n  return request.get(url);\n}\n\nexport function idnoth() {\n  const url = \"/api/user/identity_view_authority_relation\";\n  return request.get(url);\n}\n\n// 登录\nexport function _login({ username, password }: Login) {\n  const url = \"/api/user/login\";\n  return request.post(url, { user_name: username, user_pwd: password });\n}\n\n// 展示所有的身份\nexport function _identity() {\n  const url = \"/api/user/identity\";\n  return request.get(url);\n}\n\n// 展示所有的用户\nexport function _userUser() {\n  const url = \"/api/user/user\";\n  return request.get(url);\n}\n\n// 创建用户\nexport function _user(query: User) {\n  const url = \"/api/user\";\n  return request.post(url, { ...query });\n}\n\n// 更新用户\nexport function _userUpUser(query: UpUser) {\n  const url = \"/api/user/user\";\n  return request.put(url, { ...query });\n}\n\n// 添加身份\nexport function _identityEdit(params: IdentityEdit) {\n  const url = \"/api/user/identity/edit\";\n  return request.get(url, { params });\n}\n\n// 添加api接口权限\nexport function _authorityApiEdit(params: AuthorityApiEdit) {\n  const url = \"/api/user/authorityApi/edit\";\n  return request.get(url, { params });\n}\n\n// 视图接口\nexport function _viewAuthority() {\n  const url = \"/api/user/view_authority\";\n  return request.get(url);\n}\n\n// 获取所有api接口\nexport function _apiAuthority() {\n  const url = \"/api/user/api_authority\";\n  return request.get(url);\n}\n\n// 给身份设置api接口\nexport function _setIdentityApi(query: OnsetIdentityApi) {\n  const url = \"/api/user/setIdentityApi\";\n  return request.post(url, { ...query });\n}\n\n// 给身份添加视图权限\nexport function _setIdentityView(query: OnsetIdentityView) {\n  const url = \"/api/user/setIdentityView\";\n  return request.post(url, { ...query });\n}\n\n// 添加视图接口\nexport function _authorityViewEdit(params: AuthorityApiView) {\n  const url = \"/user/authorityView/edit\";\n  return request.get(url, { params });\n}\n","/*\n * @Descripttion:\n * @version: 1.0\n * @Author: 南佳佳\n * @Date: 2020-10-22 09:05:35\n * @LastEditors: 南佳佳\n * @LastEditTime: 2020-10-22 09:09:10\n */\nimport request from \"@/utils/request\";\n\n//获取考试类型接口\nexport function _allExamType() {\n  const url = \"/api/exam/examType\";\n  return request.get(url);\n}\n//获取课程接口\nexport function _allCourseType() {\n  const url = \"/api/exam/subject\";\n  return request.get(url);\n}\n\n//获取试卷列表接口\nexport function _allCourseList() {\n  const url = \"/api/exam/exam\";\n  return request.get(url);\n}\n\n//获取题目类型接口\nexport function _getQuestionType() {\n  const url = \"/api/exam/getQuestionsType\";\n  return request.get(url);\n}\n\n//添加试卷接口\nexport function _addTest(params: any) {\n  let url = \"/api/exam/exam\";\n  return request.post(url, params);\n}\n\n//获取所有试题列表接口(机器人补位。。。)\nexport function _getTestList() {\n  let url = \"/api/exam/questions/new\";\n  return request.get(url);\n}\n\n//试卷列表跳转详情接口\nexport function _show(exam_id: any) {\n  let url = `/api/exam/exam/${exam_id}`;\n  return request.get(url);\n}\n\n// 搜索接口\nexport function _search(\n  subject_id: any,\n  exam_id: undefined,\n  questions_type_id: undefined\n) {\n  let url = `/api/exam/questions/condition/?subject_id=${subject_id}&exam_id=${exam_id}&questions_type_id=${questions_type_id}`;\n  return request.get(url);\n}\n\n//更新列表接口\nexport function _updateTest(ids: any, exam_exam_id: String) {\n  let question_ids = JSON.stringify(ids);\n  let url = `/api/exam/exam/${exam_exam_id}`;\n  return request.put(url, {\n    question_ids\n  });\n}\n"],"sourceRoot":""}